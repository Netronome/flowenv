/*
 * Copyright (C) 2018,  Netronome Systems, Inc.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @file          nfp3800/nfp_nbi_tm.h
 * @brief         NFP3800 NBI Traffic Manager CSR definitions
 */

#ifndef _NFP3800__NFP_NBI_TM_H_
#define _NFP3800__NFP_NBI_TM_H_


/**
 * NBI Traffic Manager XPB BUS offset for a given NBI island
 */
#define NFP_NBI_TM_XPB_OFF(_isl)  ((_isl << 24) | 0x8140000)

/*
 * NBI Traffic Manager Register Block Offsets
 */
/* TrafficManagerReg: <base>.TrafficManagerReg */
#define NFP_NBI_TM_TRAFFIC_MANAGER_REG                     0x0000
/* TMQueueReg: <base>.TMQueueReg */
#define NFP_NBI_TM_QUEUE_REG                               0x10000
/* TMSchedulerReg: <base>.TMSchedulerReg */
#define NFP_NBI_TM_SCHEDULER_REG                           0x20000
/* SchedulerL1Weight: <base>.SchedulerL1Weight */
#define NFP_NBI_TM_SCHEDULER_L1_WEIGHT                     0x30000
/* SchedulerL1Deficit: <base>.SchedulerL1Deficit */
#define NFP_NBI_TM_SCHEDULER_L1_DEFICIT                    0x40000
/* ECCControl_2: <base>.SchedulerL1ECC <base>.SchedulerL2ECC <base>.HdTlMemECC <base>.ReorderMemECC <base>.SchedulerL0ECC <base>.FreeNextMemECC */
#define NFP_NBI_TM_SCHEDULER_L1_ECC                        0x50000
#define NFP_NBI_TM_SCHEDULER_L2_ECC                        0x80000
#define NFP_NBI_TM_HD_TL_MEM_ECC                           0xb0000
#define NFP_NBI_TM_REORDER_MEM_ECC                         0xf0000
#define NFP_NBI_TM_SCHEDULER_L0_ECC                        0x100000
#define NFP_NBI_TM_FREE_NEXT_MEM_ECC                       0x120000
/* SchedulerL2Weight: <base>.SchedulerL2Weight */
#define NFP_NBI_TM_SCHEDULER_L2_WEIGHT                     0x60000
/* SchedulerL2Deficit: <base>.SchedulerL2Deficit */
#define NFP_NBI_TM_SCHEDULER_L2_DEFICIT                    0x70000
/* TMShaperReg: <base>.TMShaperReg */
#define NFP_NBI_TM_SHAPER_REG                              0x90000
/* ECCControl: <base>.DescriptorMemECC <base>.BLQMemECC <base>.DropCntMemECC <base>.QueueLevelMemECC */
#define NFP_NBI_TM_DESCRIPTOR_MEM_ECC                      0xa0000
#define NFP_NBI_TM_BLQ_MEM_ECC                             0xc0000
#define NFP_NBI_TM_DROP_CNT_MEM_ECC                        0x110000
#define NFP_NBI_TM_QUEUE_LEVEL_MEM_ECC                     0x130000
/* ECCControl_8: <base>.EgressPktBufECC */
#define NFP_NBI_TM_EGRESS_PKT_BUF_ECC                      0xd0000


/*
 * NBI Traffic Manager CSRs
 */

/*
 * Register: TrafficManagerConfig
 *   [31]      DWRRIgnoreMacXoffFC
 *   [30]      DecodePMDisable
 *   [29]      ShaperReduceThreeFourthEnable
 *   [28]      ShaperReduceRateEnable
 *   [27]      FreePktVSAddressBitSet
 *   [26:25]   UseTwoPullIDBuses
 *   [24]      FlowControlEventEna
 *   [23]      PktReadyC0Enable
 *   [22]      TmFreePtrNoReturn
 *   [21]      DWRRIgnoreMiniPktFC
 *   [20]      StartLinkedListInit
 *   [17]      PacketDescriptorLinkedListEna
 *   [16]      OOBFCEnable
 *   [15:13]   L0ChannelMap
 *   [12]      LevelCheckEnable
 *   [11]      DescQueuesEnable
 *   [9]       ErrPoisonEna
 *   [8]       SchedulerEnable
 *   [7]       ShaperEnable
 *   [6]       MiniPacketFCEnable
 *   [5]       ChannelLevelSelect
 *   [3:1]     NumSequencers
 *   [0]       L1InputSelect
 *
 * Name(s):
 * <base>.TrafficManagerConfig
 */
#define NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG                  0x0000
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMACXOFFFC (1 << 31)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMACXOFFFC_Default (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMACXOFFFC_Ignore (0x80000000)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMACXOFFFC_bf 0, 31, 31
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMACXOFFFC_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMACXOFFFC_bit (31)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DECODE_PM_DISABLE (1 << 30)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DECODE_PM_DISABLE_bf 0, 30, 30
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DECODE_PM_DISABLE_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DECODE_PM_DISABLE_bit (30)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPER_REDUCE_THREE_FOURTH_ENABLE (1 << 29)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPER_REDUCE_THREE_FOURTH_ENABLE_bf 0, 29, 29
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPER_REDUCE_THREE_FOURTH_ENABLE_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPER_REDUCE_THREE_FOURTH_ENABLE_bit (29)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPER_REDUCE_RATE_ENABLE (1 << 28)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPER_REDUCE_RATE_ENABLE_bf 0, 28, 28
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPER_REDUCE_RATE_ENABLE_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPER_REDUCE_RATE_ENABLE_bit (28)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_FREE_PKT_VS_ADDRESS_BIT_SET (1 << 27)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_FREE_PKT_VS_ADDRESS_BIT_SET_0 (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_FREE_PKT_VS_ADDRESS_BIT_SET_1 (0x8000000)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_FREE_PKT_VS_ADDRESS_BIT_SET_bf 0, 27, 27
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_FREE_PKT_VS_ADDRESS_BIT_SET_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_FREE_PKT_VS_ADDRESS_BIT_SET_bit (27)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_USETWOPULLIDBUSES(x) (((x) & 3) << 25)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_USETWOPULLIDBUSES_of(x) (((x) >> 25) & 3)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_USETWOPULLIDBUSES_0 (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_USETWOPULLIDBUSES_1 (1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_USETWOPULLIDBUSES_2 (2)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_USETWOPULLIDBUSES_3 (3)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_USETWOPULLIDBUSES_bf 0, 26, 25
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_USETWOPULLIDBUSES_msk (0x3)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_USETWOPULLIDBUSES_shf (25)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_FLOWCONTROLEVENTENA (1 << 24)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_FLOWCONTROLEVENTENA_bf 0, 24, 24
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_FLOWCONTROLEVENTENA_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_FLOWCONTROLEVENTENA_bit (24)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_PKTREADYC0ENABLE (1 << 23)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_PKTREADYC0ENABLE_bf 0, 23, 23
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_PKTREADYC0ENABLE_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_PKTREADYC0ENABLE_bit (23)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_TMFREEPTRNORETURN (1 << 22)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_TMFREEPTRNORETURN_bf 0, 22, 22
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_TMFREEPTRNORETURN_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_TMFREEPTRNORETURN_bit (22)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMINIPKTFC (1 << 21)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMINIPKTFC_Default (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMINIPKTFC_Ignore (0x200000)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMINIPKTFC_bf 0, 21, 21
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMINIPKTFC_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DWRRIGNOREMINIPKTFC_bit (21)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_STARTLINKEDLISTINIT (1 << 20)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_STARTLINKEDLISTINIT_bf 0, 20, 20
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_STARTLINKEDLISTINIT_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_STARTLINKEDLISTINIT_bit (20)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_PACKETDESCRIPTORLINKEDLISTENA (1 << 17)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_PACKETDESCRIPTORLINKEDLISTENA_Disable (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_PACKETDESCRIPTORLINKEDLISTENA_Enable (0x20000)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_PACKETDESCRIPTORLINKEDLISTENA_bf 0, 17, 17
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_PACKETDESCRIPTORLINKEDLISTENA_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_PACKETDESCRIPTORLINKEDLISTENA_bit (17)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_OOBFCENABLE      (1 << 16)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_OOBFCENABLE_Disable (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_OOBFCENABLE_Enable (0x10000)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_OOBFCENABLE_bf 0, 16, 16
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_OOBFCENABLE_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_OOBFCENABLE_bit (16)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP(x)  (((x) & 7) << 13)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_of(x) (((x) >> 13) & 7)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_0 (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_1 (1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_2 (2)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_3 (3)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_4 (4)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_5 (5)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_6 (6)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_7 (7)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_bf 0, 15, 13
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_msk (0x7)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L0CHANNELMAP_shf (13)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_LEVELCHECKENABLE (1 << 12)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_LEVELCHECKENABLE_Disable (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_LEVELCHECKENABLE_Enable (0x1000)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_LEVELCHECKENABLE_bf 0, 12, 12
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_LEVELCHECKENABLE_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_LEVELCHECKENABLE_bit (12)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DESCQUEUESENABLE (1 << 11)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DESCQUEUESENABLE_Disable (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DESCQUEUESENABLE_Enable (0x800)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DESCQUEUESENABLE_bf 0, 11, 11
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DESCQUEUESENABLE_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_DESCQUEUESENABLE_bit (11)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_ERR_POISON_ENA   (1 << 9)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_ERR_POISON_ENA_Disable (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_ERR_POISON_ENA_Enable (0x200)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_ERR_POISON_ENA_bf 0, 9, 9
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_ERR_POISON_ENA_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_ERR_POISON_ENA_bit (9)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SCHEDULERENABLE  (1 << 8)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SCHEDULERENABLE_Disable (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SCHEDULERENABLE_Enable (0x100)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SCHEDULERENABLE_bf 0, 8, 8
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SCHEDULERENABLE_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SCHEDULERENABLE_bit (8)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPERENABLE     (1 << 7)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPERENABLE_Disable (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPERENABLE_Enable (0x80)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPERENABLE_bf 0, 7, 7
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPERENABLE_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_SHAPERENABLE_bit (7)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_MINIPACKETFCENABLE (1 << 6)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_MINIPACKETFCENABLE_Disable (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_MINIPACKETFCENABLE_Enable (0x40)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_MINIPACKETFCENABLE_bf 0, 6, 6
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_MINIPACKETFCENABLE_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_MINIPACKETFCENABLE_bit (6)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_CHANNELLEVELSELECT (1 << 5)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_CHANNELLEVELSELECT_Level_0 (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_CHANNELLEVELSELECT_Level_1 (0x20)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_CHANNELLEVELSELECT_bf 0, 5, 5
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_CHANNELLEVELSELECT_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_CHANNELLEVELSELECT_bit (5)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS(x) (((x) & 7) << 1)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_of(x) (((x) >> 1) & 7)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_0 (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_1 (1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_2 (2)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_4 (3)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_8 (4)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_16 (5)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_NA (6)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_NA (7)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_bf 0, 3, 1
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_msk (0x7)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_NUMSEQUENCERS_shf (1)
#define   NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L1INPUTSELECT    (1 << 0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L1INPUTSELECT_L1_Disable (0)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L1INPUTSELECT_L1_Enable (1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L1INPUTSELECT_bf 0, 0, 0
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L1INPUTSELECT_msk (0x1)
#define     NFP_NBI_TM_TRAFFIC_MANAGER_CONFIG_L1INPUTSELECT_bit (0)


/*
 * Register: DropRate
 *   [23:21]   DropRateRangeB3
 *   [20:18]   DropRateRangeB2
 *   [17:15]   DropRateRangeB1
 *   [14:12]   DropRateRangeB0
 *   [11:9]    DropRateRangeA3
 *   [8:6]     DropRateRangeA2
 *   [5:3]     DropRateRangeA1
 *   [2:0]     DropRateRangeA0
 *
 * Name(s):
 * <base>.DropRate
 */
#define NFP_NBI_TM_DROP_RATE                               0x0004
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3(x)            (((x) & 7) << 21)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_of(x)         (((x) >> 21) & 7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_0           (0)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_12_5        (1)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_25          (2)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_37_5        (3)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_50          (4)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_62_5        (5)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_75          (6)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_87_5        (7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_bf          0, 23, 21
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_msk         (0x7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB3_shf         (21)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2(x)            (((x) & 7) << 18)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_of(x)         (((x) >> 18) & 7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_0           (0)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_12_5        (1)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_25          (2)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_37_5        (3)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_50          (4)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_62_5        (5)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_75          (6)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_87_5        (7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_bf          0, 20, 18
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_msk         (0x7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB2_shf         (18)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1(x)            (((x) & 7) << 15)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_of(x)         (((x) >> 15) & 7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_0           (0)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_12_5        (1)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_25          (2)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_37_5        (3)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_50          (4)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_62_5        (5)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_75          (6)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_87_5        (7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_bf          0, 17, 15
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_msk         (0x7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB1_shf         (15)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0(x)            (((x) & 7) << 12)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_of(x)         (((x) >> 12) & 7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_0           (0)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_12_5        (1)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_25          (2)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_37_5        (3)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_50          (4)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_62_5        (5)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_75          (6)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_87_5        (7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_bf          0, 14, 12
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_msk         (0x7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEB0_shf         (12)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3(x)            (((x) & 7) << 9)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_of(x)         (((x) >> 9) & 7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_0           (0)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_12_5        (1)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_25          (2)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_37_5        (3)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_50          (4)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_62_5        (5)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_75          (6)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_87_5        (7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_bf          0, 11, 9
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_msk         (0x7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA3_shf         (9)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2(x)            (((x) & 7) << 6)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_of(x)         (((x) >> 6) & 7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_0           (0)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_12_5        (1)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_25          (2)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_37_5        (3)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_50          (4)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_62_5        (5)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_75          (6)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_87_5        (7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_bf          0, 8, 6
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_msk         (0x7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA2_shf         (6)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1(x)            (((x) & 7) << 3)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_of(x)         (((x) >> 3) & 7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_0           (0)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_12_5        (1)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_25          (2)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_37_5        (3)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_50          (4)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_62_5        (5)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_75          (6)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_87_5        (7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_bf          0, 5, 3
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_msk         (0x7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA1_shf         (3)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0(x)            (((x) & 7) << 0)
#define   NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_of(x)         (((x) >> 0) & 7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_0           (0)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_12_5        (1)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_25          (2)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_37_5        (3)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_50          (4)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_62_5        (5)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_75          (6)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_87_5        (7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_bf          0, 2, 0
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_msk         (0x7)
#define     NFP_NBI_TM_DROP_RATE_DROPRATERANGEA0_shf         (0)


/*
 * Register: BlqEvent
 *   [23]      ReducedBLQThreshold
 *   [22]      BypassBLQPtrReturn
 *   [21]      ClrRunningEventCount
 *   [20]      DisBLQEventFifoFullAssert
 *   [19:18]   BLQEventThreshold3
 *   [17:16]   BLQEventThreshold2
 *   [15:14]   BLQEventThreshold1
 *   [13:12]   BLQEventThreshold0
 *   [7:4]     BLQEventNotEmptyEnable
 *   [3:0]     BLQEventStatusEnable
 *
 * Name(s):
 * <base>.BlqEvent
 */
#define NFP_NBI_TM_BLQ_EVENT                               0x0008
#define   NFP_NBI_TM_BLQ_EVENT_REDUCED_BLQ_THRESHOLD         (1 << 23)
#define     NFP_NBI_TM_BLQ_EVENT_REDUCED_BLQ_THRESHOLD_bf    0, 23, 23
#define     NFP_NBI_TM_BLQ_EVENT_REDUCED_BLQ_THRESHOLD_msk   (0x1)
#define     NFP_NBI_TM_BLQ_EVENT_REDUCED_BLQ_THRESHOLD_bit   (23)
#define   NFP_NBI_TM_BLQ_EVENT_BYPASS_BLQ_PTR_RETURN         (1 << 22)
#define     NFP_NBI_TM_BLQ_EVENT_BYPASS_BLQ_PTR_RETURN_bf    0, 22, 22
#define     NFP_NBI_TM_BLQ_EVENT_BYPASS_BLQ_PTR_RETURN_msk   (0x1)
#define     NFP_NBI_TM_BLQ_EVENT_BYPASS_BLQ_PTR_RETURN_bit   (22)
#define   NFP_NBI_TM_BLQ_EVENT_CLR_RUNNING_EVT_CNT           (1 << 21)
#define     NFP_NBI_TM_BLQ_EVENT_CLR_RUNNING_EVT_CNT_bf      0, 21, 21
#define     NFP_NBI_TM_BLQ_EVENT_CLR_RUNNING_EVT_CNT_msk     (0x1)
#define     NFP_NBI_TM_BLQ_EVENT_CLR_RUNNING_EVT_CNT_bit     (21)
#define   NFP_NBI_TM_BLQ_EVENT_DIS_BLQ_EVENT_FIFO_FULL_ASSERT (1 << 20)
#define     NFP_NBI_TM_BLQ_EVENT_DIS_BLQ_EVENT_FIFO_FULL_ASSERT_bf 0, 20, 20
#define     NFP_NBI_TM_BLQ_EVENT_DIS_BLQ_EVENT_FIFO_FULL_ASSERT_msk (0x1)
#define     NFP_NBI_TM_BLQ_EVENT_DIS_BLQ_EVENT_FIFO_FULL_ASSERT_bit (20)
#define   NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD3(x)        (((x) & 3) << 18)
#define   NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD3_of(x)     (((x) >> 18) & 3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD3_16_or_4 (0)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD3_32_or_8 (1)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD3_64_or_16 (2)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD3_128_or_32 (3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD3_bf      0, 19, 18
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD3_msk     (0x3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD3_shf     (18)
#define   NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD2(x)        (((x) & 3) << 16)
#define   NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD2_of(x)     (((x) >> 16) & 3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD2_16_or_4 (0)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD2_32_or_8 (1)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD2_64_or_16 (2)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD2_128_or_32 (3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD2_bf      0, 17, 16
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD2_msk     (0x3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD2_shf     (16)
#define   NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD1(x)        (((x) & 3) << 14)
#define   NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD1_of(x)     (((x) >> 14) & 3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD1_16_or_4 (0)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD1_32_or_8 (1)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD1_64_or_16 (2)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD1_128_or_32 (3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD1_bf      0, 15, 14
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD1_msk     (0x3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD1_shf     (14)
#define   NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD0(x)        (((x) & 3) << 12)
#define   NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD0_of(x)     (((x) >> 12) & 3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD0_16_or_4 (0)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD0_32_or_8 (1)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD0_64_or_16 (2)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD0_128_or_32 (3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD0_bf      0, 13, 12
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD0_msk     (0x3)
#define     NFP_NBI_TM_BLQ_EVENT_BLQEVENT_THRESHOLD0_shf     (12)
#define   NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_NOT_EMPTY_ENABLE(x) (((x) & 0xf) << 4)
#define   NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_NOT_EMPTY_ENABLE_of(x) (((x) >> 4) & 0xf)
#define     NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_NOT_EMPTY_ENABLE_Disable (0)
#define     NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_NOT_EMPTY_ENABLE_Enable (1)
#define     NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_NOT_EMPTY_ENABLE_bf 0, 7, 4
#define     NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_NOT_EMPTY_ENABLE_msk (0xf)
#define     NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_NOT_EMPTY_ENABLE_shf (4)
#define   NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_STATUS_ENABLE(x)    (((x) & 0xf) << 0)
#define   NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_STATUS_ENABLE_of(x) (((x) >> 0) & 0xf)
#define     NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_STATUS_ENABLE_Disable (0)
#define     NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_STATUS_ENABLE_Enable (1)
#define     NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_STATUS_ENABLE_bf  0, 3, 0
#define     NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_STATUS_ENABLE_msk (0xf)
#define     NFP_NBI_TM_BLQ_EVENT_BLQ_EVENT_STATUS_ENABLE_shf (0)


/*
 * Register: EgressRateLimit
 *   [3]       EgressRateLimitOff
 *   [2:0]     EgressRate
 *
 * Name(s):
 * <base>.EgressRateLimit
 */
#define NFP_NBI_TM_EGRESS_RATE_LIMIT                       0x0074
#define   NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_LIMIT_OFF (1 << 3)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_LIMIT_OFF_on (0)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_LIMIT_OFF_off (8)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_LIMIT_OFF_bf 0, 3, 3
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_LIMIT_OFF_msk (0x1)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_LIMIT_OFF_bit (3)
#define   NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE(x)        (((x) & 7) << 0)
#define   NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_of(x)     (((x) >> 0) & 7)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_64G     (0)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_32G     (1)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_16G     (2)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_8G      (3)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_128G    (4)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_112G    (5)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_96G     (6)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_80G     (7)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_bf      0, 2, 0
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_msk     (0x7)
#define     NFP_NBI_TM_EGRESS_RATE_LIMIT_EGRESS_RATE_shf     (0)


/*
 * Register: EgressPullIdPortEnable
 *   [1:0]     EgressPullIdPortEnable
 *
 * Name(s):
 * <base>.EgressPullIdPortEnable
 */
#define NFP_NBI_TM_EGRESS_PULL_ID_PORT_ENABLE              0x0078
#define   NFP_NBI_TM_EGRESS_PULL_ID_PORT_ENABLE_EGRESS_PULL_ID_PORT_ENABLE(x) (((x) & 3) << 0)
#define   NFP_NBI_TM_EGRESS_PULL_ID_PORT_ENABLE_EGRESS_PULL_ID_PORT_ENABLE_of(x) (((x) >> 0) & 3)
#define     NFP_NBI_TM_EGRESS_PULL_ID_PORT_ENABLE_EGRESS_PULL_ID_PORT_ENABLE_P6_and_P7 (0)
#define     NFP_NBI_TM_EGRESS_PULL_ID_PORT_ENABLE_EGRESS_PULL_ID_PORT_ENABLE_P6 (1)
#define     NFP_NBI_TM_EGRESS_PULL_ID_PORT_ENABLE_EGRESS_PULL_ID_PORT_ENABLE_P7 (2)
#define     NFP_NBI_TM_EGRESS_PULL_ID_PORT_ENABLE_EGRESS_PULL_ID_PORT_ENABLE_unused (3)
#define     NFP_NBI_TM_EGRESS_PULL_ID_PORT_ENABLE_EGRESS_PULL_ID_PORT_ENABLE_bf 0, 1, 0
#define     NFP_NBI_TM_EGRESS_PULL_ID_PORT_ENABLE_EGRESS_PULL_ID_PORT_ENABLE_msk (0x3)
#define     NFP_NBI_TM_EGRESS_PULL_ID_PORT_ENABLE_EGRESS_PULL_ID_PORT_ENABLE_shf (0)


/*
 * Register: OutOfOrderCount
 *   [15:0]    OutOfOrderCount
 *
 * Name(s):
 * <base>.OutOfOrderCount0...
 */
#define NFP_NBI_TM_OUT_OF_ORDER_COUNT(x)                   (0x0100 + ((x) * 0x4))
#define   NFP_NBI_TM_OUT_OF_ORDER_COUNT_OUTOFORDERCOUNT(x)   (((x) & 0xffff) << 0)
#define   NFP_NBI_TM_OUT_OF_ORDER_COUNT_OUTOFORDERCOUNT_of(x) (((x) >> 0) & 0xffff)
#define     NFP_NBI_TM_OUT_OF_ORDER_COUNT_OUTOFORDERCOUNT_bf 0, 15, 0
#define     NFP_NBI_TM_OUT_OF_ORDER_COUNT_OUTOFORDERCOUNT_msk (0xffff)
#define     NFP_NBI_TM_OUT_OF_ORDER_COUNT_OUTOFORDERCOUNT_shf (0)


/*
 * Register: OutOfOrderCountClear
 *   [15:0]    OutOfOrderCountClear
 *
 * Name(s):
 * <base>.OutOfOrderCountClear0...
 */
#define NFP_NBI_TM_OUT_OF_ORDER_COUNT_CLEAR(x)             (0x0200 + ((x) * 0x4))
#define   NFP_NBI_TM_OUT_OF_ORDER_COUNT_CLEAR_OUTOFORDERCOUNTCLEAR(x) (((x) & 0xffff) << 0)
#define   NFP_NBI_TM_OUT_OF_ORDER_COUNT_CLEAR_OUTOFORDERCOUNTCLEAR_of(x) (((x) >> 0) & 0xffff)
#define     NFP_NBI_TM_OUT_OF_ORDER_COUNT_CLEAR_OUTOFORDERCOUNTCLEAR_bf 0, 15, 0
#define     NFP_NBI_TM_OUT_OF_ORDER_COUNT_CLEAR_OUTOFORDERCOUNTCLEAR_msk (0xffff)
#define     NFP_NBI_TM_OUT_OF_ORDER_COUNT_CLEAR_OUTOFORDERCOUNTCLEAR_shf (0)


/*
 * Register: MiniPktCreditConfig
 *   [25]      PerChannelCreditEnable
 *   [24]      MiniPacketFCMode
 *   [21:12]   FPCreditLimit
 *   [9:0]     CreditLimit
 *
 * Name(s):
 * <base>.MiniPktCreditConfig
 */
#define NFP_NBI_TM_MINIPKT_CREDIT_CONFIG                   0x0300
#define   NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_PERCHANNELCREDITENABLE (1 << 25)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_PERCHANNELCREDITENABLE_Disable (0)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_PERCHANNELCREDITENABLE_Enable (0x2000000)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_PERCHANNELCREDITENABLE_bf 0, 25, 25
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_PERCHANNELCREDITENABLE_msk (0x1)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_PERCHANNELCREDITENABLE_bit (25)
#define   NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_MINIPACKETFCMODE  (1 << 24)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_MINIPACKETFCMODE_Mode_0 (0)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_MINIPACKETFCMODE_Mode_1 (0x1000000)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_MINIPACKETFCMODE_bf 0, 24, 24
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_MINIPACKETFCMODE_msk (0x1)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_MINIPACKETFCMODE_bit (24)
#define   NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_FPCREDITLIMIT(x)  (((x) & 0x3ff) << 12)
#define   NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_FPCREDITLIMIT_of(x) (((x) >> 12) & 0x3ff)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_FPCREDITLIMIT_bf 0, 21, 12
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_FPCREDITLIMIT_msk (0x3ff)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_FPCREDITLIMIT_shf (12)
#define   NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_CREDITLIMIT(x)    (((x) & 0x3ff) << 0)
#define   NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_CREDITLIMIT_of(x) (((x) >> 0) & 0x3ff)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_CREDITLIMIT_bf  0, 9, 0
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_CREDITLIMIT_msk (0x3ff)
#define     NFP_NBI_TM_MINIPKT_CREDIT_CONFIG_CREDITLIMIT_shf (0)


/*
 * Register: MiniPktFreePoolCredit
 *   [9:0]     FPCreditCounter
 *
 * Name(s):
 * <base>.MiniPktFreePoolCredit0...
 */
#define NFP_NBI_TM_MINIPKT_FREE_POOL_CREDIT(x)             (0x0304 + ((x) * 0x4))
#define   NFP_NBI_TM_MINIPKT_FREE_POOL_CREDIT_FPCREDITCOUNT(x) (((x) & 0x3ff) << 0)
#define   NFP_NBI_TM_MINIPKT_FREE_POOL_CREDIT_FPCREDITCOUNT_of(x) (((x) >> 0) & 0x3ff)
#define     NFP_NBI_TM_MINIPKT_FREE_POOL_CREDIT_FPCREDITCOUNT_bf 0, 9, 0
#define     NFP_NBI_TM_MINIPKT_FREE_POOL_CREDIT_FPCREDITCOUNT_msk (0x3ff)
#define     NFP_NBI_TM_MINIPKT_FREE_POOL_CREDIT_FPCREDITCOUNT_shf (0)


/*
 * Register: MiniPktChannelCredit
 *   [9:0]     CreditCounter
 *
 * Name(s):
 * <base>.MiniPktChannelCredit0...
 */
#define NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT(x)               (0x0400 + ((x) * 0x4))
#define   NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT_CREDITCOUNT(x)   (((x) & 0x3ff) << 0)
#define   NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT_CREDITCOUNT_of(x) (((x) >> 0) & 0x3ff)
#define     NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT_CREDITCOUNT_bf 0, 9, 0
#define     NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT_CREDITCOUNT_msk (0x3ff)
#define     NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT_CREDITCOUNT_shf (0)


/*
 * Register: ReorderActivity
 *   [15:0]    ReorderActivity
 *
 * Name(s):
 * <base>.ReorderActivity
 */
#define NFP_NBI_TM_REORDER_ACTIVITY                        0x0600
#define   NFP_NBI_TM_REORDER_ACTIVITY_REORDERACTIVITY(x)     (((x) & 0xffff) << 0)
#define   NFP_NBI_TM_REORDER_ACTIVITY_REORDERACTIVITY_of(x)  (((x) >> 0) & 0xffff)
#define     NFP_NBI_TM_REORDER_ACTIVITY_REORDERACTIVITY_bf   0, 15, 0
#define     NFP_NBI_TM_REORDER_ACTIVITY_REORDERACTIVITY_msk  (0xffff)
#define     NFP_NBI_TM_REORDER_ACTIVITY_REORDERACTIVITY_shf  (0)


/*
 * Register: DropProfile
 *   [11:9]    DropRateRange3
 *   [8:6]     DropRateRange2
 *   [5:3]     DropRateRange1
 *   [2:0]     DropRateRange0
 *
 * Name(s):
 * <base>.DropProfile0...
 */
#define NFP_NBI_TM_DROP_PROFILE(x)                         (0x0604 + ((x) * 0x4))
#define   NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3(x)          (((x) & 7) << 9)
#define   NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_of(x)       (((x) >> 9) & 7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_0         (0)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_12_5      (1)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_25        (2)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_37_5      (3)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_50        (4)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_62_5      (5)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_75        (6)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_87_5      (7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_bf        0, 11, 9
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_msk       (0x7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE3_shf       (9)
#define   NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2(x)          (((x) & 7) << 6)
#define   NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_of(x)       (((x) >> 6) & 7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_0         (0)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_12_5      (1)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_25        (2)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_37_5      (3)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_50        (4)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_62_5      (5)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_75        (6)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_87_5      (7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_bf        0, 8, 6
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_msk       (0x7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE2_shf       (6)
#define   NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1(x)          (((x) & 7) << 3)
#define   NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_of(x)       (((x) >> 3) & 7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_0         (0)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_12_5      (1)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_25        (2)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_37_5      (3)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_50        (4)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_62_5      (5)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_75        (6)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_87_5      (7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_bf        0, 5, 3
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_msk       (0x7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE1_shf       (3)
#define   NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0(x)          (((x) & 7) << 0)
#define   NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_of(x)       (((x) >> 0) & 7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_0         (0)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_12_5      (1)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_25        (2)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_37_5      (3)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_50        (4)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_62_5      (5)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_75        (6)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_87_5      (7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_bf        0, 2, 0
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_msk       (0x7)
#define     NFP_NBI_TM_DROP_PROFILE_DROPRATERANGE0_shf       (0)


/*
 * Register: DescriptorMemoryRedDrop
 *   [11:9]    DropRateRange3
 *   [8:6]     DropRateRange2
 *   [5:3]     DropRateRange1
 *   [2:0]     DropRateRange0
 *
 * Name(s):
 * <base>.DescriptorMemoryRedDrop
 */
#define NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP              0x0628
#define   NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3(x) (((x) & 7) << 9)
#define   NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_of(x) (((x) >> 9) & 7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_0 (0)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_12_5 (1)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_25 (2)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_37_5 (3)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_50 (4)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_62_5 (5)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_75 (6)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_87_5 (7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_bf 0, 11, 9
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_msk (0x7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE3_shf (9)
#define   NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2(x) (((x) & 7) << 6)
#define   NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_of(x) (((x) >> 6) & 7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_0 (0)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_12_5 (1)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_25 (2)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_37_5 (3)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_50 (4)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_62_5 (5)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_75 (6)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_87_5 (7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_bf 0, 8, 6
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_msk (0x7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE2_shf (6)
#define   NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1(x) (((x) & 7) << 3)
#define   NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_of(x) (((x) >> 3) & 7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_0 (0)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_12_5 (1)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_25 (2)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_37_5 (3)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_50 (4)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_62_5 (5)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_75 (6)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_87_5 (7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_bf 0, 5, 3
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_msk (0x7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE1_shf (3)
#define   NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0(x) (((x) & 7) << 0)
#define   NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_of(x) (((x) >> 0) & 7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_0 (0)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_12_5 (1)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_25 (2)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_37_5 (3)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_50 (4)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_62_5 (5)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_75 (6)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_87_5 (7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_bf 0, 2, 0
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_msk (0x7)
#define     NFP_NBI_TM_DESCRIPTOR_MEMORY_RED_DROP_DROPRATERANGE0_shf (0)


/*
 * Register: MiniPktChannelCreditLimit
 *   [9:0]     ChannelCreditLimit
 *
 * Name(s):
 * <base>.MiniPktChannelCreditLimit0...
 */
#define NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT_LIMIT(x)         (0x062c + ((x) * 0x4))
#define   NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT_LIMIT_CHANNELCREDITLIMIT(x) (((x) & 0x3ff) << 0)
#define   NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT_LIMIT_CHANNELCREDITLIMIT_of(x) (((x) >> 0) & 0x3ff)
#define     NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT_LIMIT_CHANNELCREDITLIMIT_bf 0, 9, 0
#define     NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT_LIMIT_CHANNELCREDITLIMIT_msk (0x3ff)
#define     NFP_NBI_TM_MINIPKT_CHANNEL_CREDIT_LIMIT_CHANNELCREDITLIMIT_shf (0)


/*
 * Register: TmReorderBufferFlush
 *   [15:0]    SequencerFlush
 *
 * Name(s):
 * <base>.TmReorderBufferFlush
 */
#define NFP_NBI_TM_TMREORDERBUFFERFLUSH                    0x082c
#define   NFP_NBI_TM_TMREORDERBUFFERFLUSH_SEQUENCERFLUSH(x)  (((x) & 0xffff) << 0)
#define   NFP_NBI_TM_TMREORDERBUFFERFLUSH_SEQUENCERFLUSH_of(x) (((x) >> 0) & 0xffff)
#define     NFP_NBI_TM_TMREORDERBUFFERFLUSH_SEQUENCERFLUSH_bf 0, 15, 0
#define     NFP_NBI_TM_TMREORDERBUFFERFLUSH_SEQUENCERFLUSH_msk (0xffff)
#define     NFP_NBI_TM_TMREORDERBUFFERFLUSH_SEQUENCERFLUSH_shf (0)


/*
 * Register: TmReorderTimeOutRange0
 *   [31:30]   SeqRange15
 *   [29:28]   SeqRange14
 *   [27:26]   SeqRange13
 *   [25:24]   SeqRange12
 *   [23:22]   SeqRange11
 *   [21:20]   SeqRange10
 *   [19:18]   SeqRange9
 *   [17:16]   SeqRange8
 *   [15:14]   SeqRange7
 *   [13:12]   SeqRange6
 *   [11:10]   SeqRange5
 *   [9:8]     SeqRange4
 *   [7:6]     SeqRange3
 *   [5:4]     SeqRange2
 *   [3:2]     SeqRange1
 *   [1:0]     SeqRange0
 *
 * Name(s):
 * <base>.TmReorderTimeOutRange0
 */
#define NFP_NBI_TM_TMREORDERTIMEOUTRANGE0                  0x0830
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE15(x)    (((x) & 3) << 30)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE15_of(x) (((x) >> 30) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE15_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE15_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE15_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE15_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE15_bf  0, 31, 30
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE15_msk (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE15_shf (30)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE14(x)    (((x) & 3) << 28)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE14_of(x) (((x) >> 28) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE14_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE14_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE14_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE14_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE14_bf  0, 29, 28
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE14_msk (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE14_shf (28)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE13(x)    (((x) & 3) << 26)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE13_of(x) (((x) >> 26) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE13_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE13_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE13_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE13_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE13_bf  0, 27, 26
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE13_msk (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE13_shf (26)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE12(x)    (((x) & 3) << 24)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE12_of(x) (((x) >> 24) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE12_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE12_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE12_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE12_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE12_bf  0, 25, 24
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE12_msk (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE12_shf (24)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE11(x)    (((x) & 3) << 22)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE11_of(x) (((x) >> 22) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE11_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE11_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE11_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE11_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE11_bf  0, 23, 22
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE11_msk (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE11_shf (22)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE10(x)    (((x) & 3) << 20)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE10_of(x) (((x) >> 20) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE10_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE10_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE10_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE10_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE10_bf  0, 21, 20
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE10_msk (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE10_shf (20)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE9(x)     (((x) & 3) << 18)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE9_of(x)  (((x) >> 18) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE9_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE9_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE9_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE9_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE9_bf   0, 19, 18
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE9_msk  (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE9_shf  (18)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE8(x)     (((x) & 3) << 16)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE8_of(x)  (((x) >> 16) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE8_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE8_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE8_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE8_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE8_bf   0, 17, 16
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE8_msk  (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE8_shf  (16)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE7(x)     (((x) & 3) << 14)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE7_of(x)  (((x) >> 14) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE7_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE7_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE7_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE7_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE7_bf   0, 15, 14
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE7_msk  (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE7_shf  (14)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE6(x)     (((x) & 3) << 12)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE6_of(x)  (((x) >> 12) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE6_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE6_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE6_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE6_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE6_bf   0, 13, 12
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE6_msk  (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE6_shf  (12)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE5(x)     (((x) & 3) << 10)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE5_of(x)  (((x) >> 10) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE5_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE5_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE5_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE5_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE5_bf   0, 11, 10
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE5_msk  (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE5_shf  (10)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE4(x)     (((x) & 3) << 8)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE4_of(x)  (((x) >> 8) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE4_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE4_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE4_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE4_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE4_bf   0, 9, 8
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE4_msk  (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE4_shf  (8)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE3(x)     (((x) & 3) << 6)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE3_of(x)  (((x) >> 6) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE3_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE3_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE3_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE3_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE3_bf   0, 7, 6
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE3_msk  (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE3_shf  (6)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE2(x)     (((x) & 3) << 4)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE2_of(x)  (((x) >> 4) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE2_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE2_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE2_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE2_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE2_bf   0, 5, 4
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE2_msk  (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE2_shf  (4)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE1(x)     (((x) & 3) << 2)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE1_of(x)  (((x) >> 2) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE1_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE1_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE1_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE1_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE1_bf   0, 3, 2
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE1_msk  (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE1_shf  (2)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE0(x)     (((x) & 3) << 0)
#define   NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE0_of(x)  (((x) >> 0) & 3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE0_disable (0)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE0_1k_cycles (1)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE0_10k_cycles (2)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE0_100k_cycles (3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE0_bf   0, 1, 0
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE0_msk  (0x3)
#define     NFP_NBI_TM_TMREORDERTIMEOUTRANGE0_SEQRANGE0_shf  (0)


/*
 * Register: TmReorderTimeOutValue0
 *   [31:24]   SeqValue3
 *   [23:16]   SeqValue2
 *   [15:8]    SeqValue1
 *   [7:0]     SeqValue0
 *
 * Name(s):
 * <base>.TmReorderTimeOutValue0
 */
#define NFP_NBI_TM_TMREORDERTIMEOUTVALUE0                  0x0840
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE3(x)     (((x) & 0xff) << 24)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE3_of(x)  (((x) >> 24) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE3_bf   0, 31, 24
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE3_msk  (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE3_shf  (24)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE2(x)     (((x) & 0xff) << 16)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE2_of(x)  (((x) >> 16) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE2_bf   0, 23, 16
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE2_msk  (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE2_shf  (16)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE1(x)     (((x) & 0xff) << 8)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE1_of(x)  (((x) >> 8) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE1_bf   0, 15, 8
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE1_msk  (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE1_shf  (8)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE0(x)     (((x) & 0xff) << 0)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE0_of(x)  (((x) >> 0) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE0_bf   0, 7, 0
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE0_msk  (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE0_SEQVALUE0_shf  (0)


/*
 * Register: TmReorderTimeOutValue1
 *   [31:24]   SeqValue7
 *   [23:16]   SeqValue6
 *   [15:8]    SeqValue5
 *   [7:0]     SeqValue4
 *
 * Name(s):
 * <base>.TmReorderTimeOutValue1
 */
#define NFP_NBI_TM_TMREORDERTIMEOUTVALUE1                  0x0844
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE7(x)     (((x) & 0xff) << 24)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE7_of(x)  (((x) >> 24) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE7_bf   0, 31, 24
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE7_msk  (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE7_shf  (24)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE6(x)     (((x) & 0xff) << 16)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE6_of(x)  (((x) >> 16) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE6_bf   0, 23, 16
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE6_msk  (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE6_shf  (16)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE5(x)     (((x) & 0xff) << 8)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE5_of(x)  (((x) >> 8) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE5_bf   0, 15, 8
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE5_msk  (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE5_shf  (8)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE4(x)     (((x) & 0xff) << 0)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE4_of(x)  (((x) >> 0) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE4_bf   0, 7, 0
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE4_msk  (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE1_SEQVALUE4_shf  (0)


/*
 * Register: TmReorderTimeOutValue2
 *   [31:24]   SeqValue11
 *   [23:16]   SeqValue10
 *   [15:8]    SeqValue9
 *   [7:0]     SeqValue8
 *
 * Name(s):
 * <base>.TmReorderTimeOutValue2
 */
#define NFP_NBI_TM_TMREORDERTIMEOUTVALUE2                  0x0848
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE11(x)    (((x) & 0xff) << 24)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE11_of(x) (((x) >> 24) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE11_bf  0, 31, 24
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE11_msk (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE11_shf (24)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE10(x)    (((x) & 0xff) << 16)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE10_of(x) (((x) >> 16) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE10_bf  0, 23, 16
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE10_msk (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE10_shf (16)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE9(x)     (((x) & 0xff) << 8)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE9_of(x)  (((x) >> 8) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE9_bf   0, 15, 8
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE9_msk  (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE9_shf  (8)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE8(x)     (((x) & 0xff) << 0)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE8_of(x)  (((x) >> 0) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE8_bf   0, 7, 0
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE8_msk  (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE2_SEQVALUE8_shf  (0)


/*
 * Register: TmReorderTimeOutValue3
 *   [31:24]   SeqValue15
 *   [23:16]   SeqValue14
 *   [15:8]    SeqValue13
 *   [7:0]     SeqValue12
 *
 * Name(s):
 * <base>.TmReorderTimeOutValue3
 */
#define NFP_NBI_TM_TMREORDERTIMEOUTVALUE3                  0x084c
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE15(x)    (((x) & 0xff) << 24)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE15_of(x) (((x) >> 24) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE15_bf  0, 31, 24
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE15_msk (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE15_shf (24)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE14(x)    (((x) & 0xff) << 16)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE14_of(x) (((x) >> 16) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE14_bf  0, 23, 16
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE14_msk (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE14_shf (16)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE13(x)    (((x) & 0xff) << 8)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE13_of(x) (((x) >> 8) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE13_bf  0, 15, 8
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE13_msk (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE13_shf (8)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE12(x)    (((x) & 0xff) << 0)
#define   NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE12_of(x) (((x) >> 0) & 0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE12_bf  0, 7, 0
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE12_msk (0xff)
#define     NFP_NBI_TM_TMREORDERTIMEOUTVALUE3_SEQVALUE12_shf (0)


/*
 * Register: TmReorderFlushFlag
 *   [15:0]    TmReorderFlushFlag
 *
 * Name(s):
 * <base>.TmReorderFlushFlag
 */
#define NFP_NBI_TM_TMREORDERFLUSHFLAG                      0x0900
#define   NFP_NBI_TM_TMREORDERFLUSHFLAG_TMREORDERFLUSHFLAG(x) (((x) & 0xffff) << 0)
#define   NFP_NBI_TM_TMREORDERFLUSHFLAG_TMREORDERFLUSHFLAG_of(x) (((x) >> 0) & 0xffff)
#define     NFP_NBI_TM_TMREORDERFLUSHFLAG_TMREORDERFLUSHFLAG_bf 0, 15, 0
#define     NFP_NBI_TM_TMREORDERFLUSHFLAG_TMREORDERFLUSHFLAG_msk (0xffff)
#define     NFP_NBI_TM_TMREORDERFLUSHFLAG_TMREORDERFLUSHFLAG_shf (0)


/*
 * Register: TMReceivedPacketCounter
 *   [31:0]    TMReceivedPacketCounter
 *
 * Name(s):
 * <base>.TMReceivedPacketCounter
 */
#define NFP_NBI_TM_TMRECEIVEDPACKETCOUNTER                 0x0904
#define   NFP_NBI_TM_TMRECEIVEDPACKETCOUNTER_TMRECEIVEDPACKETCOUNTER(x) (((x) & 0xffffffff) << 0)
#define   NFP_NBI_TM_TMRECEIVEDPACKETCOUNTER_TMRECEIVEDPACKETCOUNTER_of(x) (((x) >> 0) & 0xffffffff)
#define     NFP_NBI_TM_TMRECEIVEDPACKETCOUNTER_TMRECEIVEDPACKETCOUNTER_bf 0, 31, 0
#define     NFP_NBI_TM_TMRECEIVEDPACKETCOUNTER_TMRECEIVEDPACKETCOUNTER_msk (0xffffffff)
#define     NFP_NBI_TM_TMRECEIVEDPACKETCOUNTER_TMRECEIVEDPACKETCOUNTER_shf (0)


/*
 * Register: TMTransmittedPacketCounter
 *   [31:0]    TMTransmittedPacketCounter
 *
 * Name(s):
 * <base>.TMTransmittedPacketCounter
 */
#define NFP_NBI_TM_TMTRANSMITTEDPACKETCOUNTER              0x0908
#define   NFP_NBI_TM_TMTRANSMITTEDPACKETCOUNTER_TMTRANSMITTEDPACKETCOUNTER(x) (((x) & 0xffffffff) << 0)
#define   NFP_NBI_TM_TMTRANSMITTEDPACKETCOUNTER_TMTRANSMITTEDPACKETCOUNTER_of(x) (((x) >> 0) & 0xffffffff)
#define     NFP_NBI_TM_TMTRANSMITTEDPACKETCOUNTER_TMTRANSMITTEDPACKETCOUNTER_bf 0, 31, 0
#define     NFP_NBI_TM_TMTRANSMITTEDPACKETCOUNTER_TMTRANSMITTEDPACKETCOUNTER_msk (0xffffffff)
#define     NFP_NBI_TM_TMTRANSMITTEDPACKETCOUNTER_TMTRANSMITTEDPACKETCOUNTER_shf (0)


/*
 * Register: TMBlqNullMuPtr
 *   [28:0]    TMBlqNullMuPtr
 *
 * Name(s):
 * <base>.TMBlqNullMuPtr
 */
#define NFP_NBI_TM_TMBLQNULLMUPTR                          0x090c
#define   NFP_NBI_TM_TMBLQNULLMUPTR_TMBLQNULLMUPTR(x)        (((x) & 0x1fffffff) << 0)
#define   NFP_NBI_TM_TMBLQNULLMUPTR_TMBLQNULLMUPTR_of(x)     (((x) >> 0) & 0x1fffffff)
#define     NFP_NBI_TM_TMBLQNULLMUPTR_TMBLQNULLMUPTR_bf      0, 28, 0
#define     NFP_NBI_TM_TMBLQNULLMUPTR_TMBLQNULLMUPTR_msk     (0x1fffffff)
#define     NFP_NBI_TM_TMBLQNULLMUPTR_TMBLQNULLMUPTR_shf     (0)


/*
 * Register: TMReorderSeqrEmpty
 *   [15:0]    TMReorderSeqrEmpty
 *
 * Name(s):
 * <base>.TMReorderSeqrEmpty
 */
#define NFP_NBI_TM_TMREORDERSEQREMPTY                      0x0910
#define   NFP_NBI_TM_TMREORDERSEQREMPTY_TMREORDERSEQREMPTY(x) (((x) & 0xffff) << 0)
#define   NFP_NBI_TM_TMREORDERSEQREMPTY_TMREORDERSEQREMPTY_of(x) (((x) >> 0) & 0xffff)
#define     NFP_NBI_TM_TMREORDERSEQREMPTY_TMREORDERSEQREMPTY_bf 0, 15, 0
#define     NFP_NBI_TM_TMREORDERSEQREMPTY_TMREORDERSEQREMPTY_msk (0xffff)
#define     NFP_NBI_TM_TMREORDERSEQREMPTY_TMREORDERSEQREMPTY_shf (0)


/*
 * Register: TMReceivedDropPacketCounter
 *   [31:0]    TMReceivedDropPacketCounter
 *
 * Name(s):
 * <base>.TMReceivedDropPacketCounter
 */
#define NFP_NBI_TM_TMRECEIVEDDROPPACKETCOUNTER             0x0914
#define   NFP_NBI_TM_TMRECEIVEDDROPPACKETCOUNTER_TMRECEIVEDDROPPACKETCOUNTER(x) (((x) & 0xffffffff) << 0)
#define   NFP_NBI_TM_TMRECEIVEDDROPPACKETCOUNTER_TMRECEIVEDDROPPACKETCOUNTER_of(x) (((x) >> 0) & 0xffffffff)
#define     NFP_NBI_TM_TMRECEIVEDDROPPACKETCOUNTER_TMRECEIVEDDROPPACKETCOUNTER_bf 0, 31, 0
#define     NFP_NBI_TM_TMRECEIVEDDROPPACKETCOUNTER_TMRECEIVEDDROPPACKETCOUNTER_msk (0xffffffff)
#define     NFP_NBI_TM_TMRECEIVEDDROPPACKETCOUNTER_TMRECEIVEDDROPPACKETCOUNTER_shf (0)


/*
 * Register: NbiTmPcieCmdOutCfg
 *   [29:20]   RingNumber
 *   [19]      OutputPort
 *   [18:11]   Island
 *   [10:9]    Token
 *   [8:4]     Action
 *   [3:0]     Target
 *
 * Name(s):
 * <base>.NbiTmPcieCmdOutCfg0...
 */
#define NFP_NBI_TM_NBITMPCIECMDOUTCFG(x)                   (0x091c + ((x) * 0x4))
#define   NFP_NBI_TM_NBITMPCIECMDOUTCFG_RING_NUMBER(x)       (((x) & 0x3ff) << 20)
#define   NFP_NBI_TM_NBITMPCIECMDOUTCFG_RING_NUMBER_of(x)    (((x) >> 20) & 0x3ff)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_RING_NUMBER_bf     0, 29, 20
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_RING_NUMBER_msk    (0x3ff)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_RING_NUMBER_shf    (20)
#define   NFP_NBI_TM_NBITMPCIECMDOUTCFG_OUTPUT_PORT          (1 << 19)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_OUTPUT_PORT_bf     0, 19, 19
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_OUTPUT_PORT_msk    (0x1)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_OUTPUT_PORT_bit    (19)
#define   NFP_NBI_TM_NBITMPCIECMDOUTCFG_ISLAND(x)            (((x) & 0xff) << 11)
#define   NFP_NBI_TM_NBITMPCIECMDOUTCFG_ISLAND_of(x)         (((x) >> 11) & 0xff)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_ISLAND_bf          0, 18, 11
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_ISLAND_msk         (0xff)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_ISLAND_shf         (11)
#define   NFP_NBI_TM_NBITMPCIECMDOUTCFG_TOKEN(x)             (((x) & 3) << 9)
#define   NFP_NBI_TM_NBITMPCIECMDOUTCFG_TOKEN_of(x)          (((x) >> 9) & 3)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_TOKEN_bf           0, 10, 9
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_TOKEN_msk          (0x3)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_TOKEN_shf          (9)
#define   NFP_NBI_TM_NBITMPCIECMDOUTCFG_ACTION(x)            (((x) & 0x1f) << 4)
#define   NFP_NBI_TM_NBITMPCIECMDOUTCFG_ACTION_of(x)         (((x) >> 4) & 0x1f)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_ACTION_bf          0, 8, 4
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_ACTION_msk         (0x1f)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_ACTION_shf         (4)
#define   NFP_NBI_TM_NBITMPCIECMDOUTCFG_TARGET(x)            (((x) & 0xf) << 0)
#define   NFP_NBI_TM_NBITMPCIECMDOUTCFG_TARGET_of(x)         (((x) >> 0) & 0xf)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_TARGET_bf          0, 3, 0
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_TARGET_msk         (0xf)
#define     NFP_NBI_TM_NBITMPCIECMDOUTCFG_TARGET_shf         (0)


/*
 * Register: FreePktOutstandingLimit
 *   [1:0]     Limit
 *
 * Name(s):
 * <base>.FreePktOutstandingLimit
 */
#define NFP_NBI_TM_FREEPKTOUTSTANDINGLIMIT                 0x095c
#define   NFP_NBI_TM_FREEPKTOUTSTANDINGLIMIT_LIMIT(x)        (((x) & 3) << 0)
#define   NFP_NBI_TM_FREEPKTOUTSTANDINGLIMIT_LIMIT_of(x)     (((x) >> 0) & 3)
#define     NFP_NBI_TM_FREEPKTOUTSTANDINGLIMIT_LIMIT_48      (0)
#define     NFP_NBI_TM_FREEPKTOUTSTANDINGLIMIT_LIMIT_64      (1)
#define     NFP_NBI_TM_FREEPKTOUTSTANDINGLIMIT_LIMIT_96      (2)
#define     NFP_NBI_TM_FREEPKTOUTSTANDINGLIMIT_LIMIT_128     (3)
#define     NFP_NBI_TM_FREEPKTOUTSTANDINGLIMIT_LIMIT_bf      0, 1, 0
#define     NFP_NBI_TM_FREEPKTOUTSTANDINGLIMIT_LIMIT_msk     (0x3)
#define     NFP_NBI_TM_FREEPKTOUTSTANDINGLIMIT_LIMIT_shf     (0)


/*
 * Register: TMChannelPcieVmQoSEna_0
 *   [31:0]    TMChannelPcieVmQoSEna_0
 *
 * Name(s):
 * <base>.TMChannelPcieVmQoSEna_0
 */
#define NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_0                 0x0960
#define   NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_0_TMCHANNELPCIEVMQOSENA_0(x) (((x) & 0xffffffff) << 0)
#define   NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_0_TMCHANNELPCIEVMQOSENA_0_of(x) (((x) >> 0) & 0xffffffff)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_0_TMCHANNELPCIEVMQOSENA_0_Default (0)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_0_TMCHANNELPCIEVMQOSENA_0_PCIe (1)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_0_TMCHANNELPCIEVMQOSENA_0_bf 0, 31, 0
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_0_TMCHANNELPCIEVMQOSENA_0_msk (0xffffffff)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_0_TMCHANNELPCIEVMQOSENA_0_shf (0)


/*
 * Register: TMChannelPcieVmQoSEna_1
 *   [31:0]    TMChannelPcieVmQoSEna_1
 *
 * Name(s):
 * <base>.TMChannelPcieVmQoSEna_1
 */
#define NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_1                 0x0964
#define   NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_1_TMCHANNELPCIEVMQOSENA_1(x) (((x) & 0xffffffff) << 0)
#define   NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_1_TMCHANNELPCIEVMQOSENA_1_of(x) (((x) >> 0) & 0xffffffff)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_1_TMCHANNELPCIEVMQOSENA_1_Default (0)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_1_TMCHANNELPCIEVMQOSENA_1_PCIe (1)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_1_TMCHANNELPCIEVMQOSENA_1_bf 0, 31, 0
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_1_TMCHANNELPCIEVMQOSENA_1_msk (0xffffffff)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_1_TMCHANNELPCIEVMQOSENA_1_shf (0)


/*
 * Register: TMChannelPcieVmQoSEna_2
 *   [31:0]    TMChannelPcieVmQoSEna_2
 *
 * Name(s):
 * <base>.TMChannelPcieVmQoSEna_2
 */
#define NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_2                 0x0968
#define   NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_2_TMCHANNELPCIEVMQOSENA_2(x) (((x) & 0xffffffff) << 0)
#define   NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_2_TMCHANNELPCIEVMQOSENA_2_of(x) (((x) >> 0) & 0xffffffff)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_2_TMCHANNELPCIEVMQOSENA_2_Default (0)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_2_TMCHANNELPCIEVMQOSENA_2_PCIe (1)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_2_TMCHANNELPCIEVMQOSENA_2_bf 0, 31, 0
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_2_TMCHANNELPCIEVMQOSENA_2_msk (0xffffffff)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_2_TMCHANNELPCIEVMQOSENA_2_shf (0)


/*
 * Register: TMChannelPcieVmQoSEna_3
 *   [31:0]    TMChannelPcieVmQoSEna_3
 *
 * Name(s):
 * <base>.TMChannelPcieVmQoSEna_3
 */
#define NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_3                 0x096c
#define   NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_3_TMCHANNELPCIEVMQOSENA_3(x) (((x) & 0xffffffff) << 0)
#define   NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_3_TMCHANNELPCIEVMQOSENA_3_of(x) (((x) >> 0) & 0xffffffff)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_3_TMCHANNELPCIEVMQOSENA_3_Default (0)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_3_TMCHANNELPCIEVMQOSENA_3_PCIe (1)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_3_TMCHANNELPCIEVMQOSENA_3_bf 0, 31, 0
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_3_TMCHANNELPCIEVMQOSENA_3_msk (0xffffffff)
#define     NFP_NBI_TM_TMCHANNELPCIEVMQOSENA_3_TMCHANNELPCIEVMQOSENA_3_shf (0)


/*
 * Register: ReorderBuffer_perf_seqr_selector
 *   [3:0]     ReorderBuffer_perf_seqr_selector
 *
 * Name(s):
 * <base>.ReorderBuffer_perf_seqr_selector
 */
#define NFP_NBI_TM_REORDERBUFFER_PERF_SEQR_SELECTOR        0x0970
#define   NFP_NBI_TM_REORDERBUFFER_PERF_SEQR_SELECTOR_REORDERBUFFER_PERF_SEQR_SELECTOR(x) (((x) & 0xf) << 0)
#define   NFP_NBI_TM_REORDERBUFFER_PERF_SEQR_SELECTOR_REORDERBUFFER_PERF_SEQR_SELECTOR_of(x) (((x) >> 0) & 0xf)
#define     NFP_NBI_TM_REORDERBUFFER_PERF_SEQR_SELECTOR_REORDERBUFFER_PERF_SEQR_SELECTOR_bf 0, 3, 0
#define     NFP_NBI_TM_REORDERBUFFER_PERF_SEQR_SELECTOR_REORDERBUFFER_PERF_SEQR_SELECTOR_msk (0xf)
#define     NFP_NBI_TM_REORDERBUFFER_PERF_SEQR_SELECTOR_REORDERBUFFER_PERF_SEQR_SELECTOR_shf (0)


/*
 * Register: ReorderBufferHeadPointerUpdate
 *   [31:0]    ReorderBufferHeadPointerUpdate
 *
 * Name(s):
 * <base>.ReorderBufferHeadPointerUpdate
 */
#define NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE      0x0974
#define   NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE_REORDER_BUFFER_HEAD_POINTER_UPDATE(x) (((x) & 0xffffffff) << 0)
#define   NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE_REORDER_BUFFER_HEAD_POINTER_UPDATE_of(x) (((x) >> 0) & 0xffffffff)
#define     NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE_REORDER_BUFFER_HEAD_POINTER_UPDATE_NumSequencers___ (1)
#define     NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE_REORDER_BUFFER_HEAD_POINTER_UPDATE_NumSequencers____ (2)
#define     NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE_REORDER_BUFFER_HEAD_POINTER_UPDATE_NumSequencers____ (3)
#define     NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE_REORDER_BUFFER_HEAD_POINTER_UPDATE_NumSequencers___ (4)
#define     NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE_REORDER_BUFFER_HEAD_POINTER_UPDATE_NumSequencers___ (5)
#define     NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE_REORDER_BUFFER_HEAD_POINTER_UPDATE_Reserved (6)
#define     NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE_REORDER_BUFFER_HEAD_POINTER_UPDATE_bf 0, 31, 0
#define     NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE_REORDER_BUFFER_HEAD_POINTER_UPDATE_msk (0xffffffff)
#define     NFP_NBI_TM_REORDER_BUFFER_HEAD_POINTER_UPDATE_REORDER_BUFFER_HEAD_POINTER_UPDATE_shf (0)


/*
 * Register: ShaperRateSelector
 *   [8:6]     L2ShaperRateSelector
 *   [5:3]     L1ShaperRateSelector
 *   [2:0]     L0ShaperRateSelector
 *
 * Name(s):
 * <base>.ShaperRateSelector
 */
#define NFP_NBI_TM_SHAPER_RATE_SELECTOR                    0x0978
#define   NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR(x) (((x) & 7) << 6)
#define   NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_of(x) (((x) >> 6) & 7)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_Default (0)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_Divide_by_2 (1)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_Divide_by_4 (2)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_Divide_by_8 (3)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_Divide_by_16 (4)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_Divide_by_128 (5)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_Divide_by_512 (6)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_Divide_by_1024 (7)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_bf 0, 8, 6
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_msk (0x7)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L2_SHAPER_RATE_SELECTOR_shf (6)
#define   NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR(x) (((x) & 7) << 3)
#define   NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_of(x) (((x) >> 3) & 7)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_Default (0)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_Divide_by_2 (1)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_Divide_by_4 (2)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_Divide_by_8 (3)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_Divide_by_16 (4)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_Divide_by_128 (5)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_Divide_by_512 (6)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_Divide_by_1024 (7)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_bf 0, 5, 3
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_msk (0x7)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L1_SHAPER_RATE_SELECTOR_shf (3)
#define   NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR(x) (((x) & 7) << 0)
#define   NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_of(x) (((x) >> 0) & 7)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_Default (0)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_Divide_by_2 (1)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_Divide_by_4 (2)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_Divide_by_8 (3)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_Divide_by_16 (4)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_Divide_by_128 (5)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_Divide_by_512 (6)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_Divide_by_1024 (7)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_bf 0, 2, 0
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_msk (0x7)
#define     NFP_NBI_TM_SHAPER_RATE_SELECTOR_L0_SHAPER_RATE_SELECTOR_shf (0)


/*
 * NBI Traffic Manager Queue CSRs
 */

/*
 * Register: QueueStatus
 *   [13]      QueueFull
 *   [12:0]    QueueLevel
 *
 * Name(s):
 * <base>.QueueStatus0...
 */
#define NFP_NBI_TM_QUEUE_STATUS(x)                         (0x0000 + ((x) * 0x4))
#define   NFP_NBI_TM_QUEUE_STATUS_QUEUEFULL                  (1 << 13)
#define     NFP_NBI_TM_QUEUE_STATUS_QUEUEFULL_bf             0, 13, 13
#define     NFP_NBI_TM_QUEUE_STATUS_QUEUEFULL_msk            (0x1)
#define     NFP_NBI_TM_QUEUE_STATUS_QUEUEFULL_bit            (13)
#define   NFP_NBI_TM_QUEUE_STATUS_QUEUELEVEL(x)              (((x) & 0x1fff) << 0)
#define   NFP_NBI_TM_QUEUE_STATUS_QUEUELEVEL_of(x)           (((x) >> 0) & 0x1fff)
#define     NFP_NBI_TM_QUEUE_STATUS_QUEUELEVEL_bf            0, 12, 0
#define     NFP_NBI_TM_QUEUE_STATUS_QUEUELEVEL_msk           (0x1fff)
#define     NFP_NBI_TM_QUEUE_STATUS_QUEUELEVEL_shf           (0)


/*
 * Register: QueueConfig
 *   [11]      DropPrecedenceEnable
 *   [10]      DropRateRangeSelect
 *   [9:6]     QueueSize
 *   [2]       REDEnable
 *   [1]       DropEnable
 *   [0]       QueueEnable
 *
 * Name(s):
 * <base>.QueueConfig0...
 */
#define NFP_NBI_TM_QUEUE_CONFIG(x)                         (0x1000 + ((x) * 0x4))
#define   NFP_NBI_TM_QUEUE_CONFIG_DROPPRECEDENCEENABLE       (1 << 11)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPPRECEDENCEENABLE_Disable (0)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPPRECEDENCEENABLE_Enable (0x800)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPPRECEDENCEENABLE_bf  0, 11, 11
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPPRECEDENCEENABLE_msk (0x1)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPPRECEDENCEENABLE_bit (11)
#define   NFP_NBI_TM_QUEUE_CONFIG_DROPRATERANGESELECT        (1 << 10)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPRATERANGESELECT_A    (0)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPRATERANGESELECT_B    (0x400)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPRATERANGESELECT_bf   0, 10, 10
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPRATERANGESELECT_msk  (0x1)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPRATERANGESELECT_bit  (10)
#define   NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE(x)               (((x) & 0xf) << 6)
#define   NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_of(x)            (((x) >> 6) & 0xf)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_n_a            (0)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_n_a            (1)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_n_a            (2)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_8              (3)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_16             (4)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_32             (5)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_64             (6)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_128            (7)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_256            (8)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_512            (9)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_1024           (0xa)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_2048           (0xb)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_4096           (0xc)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_n_a            (0xd)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_n_a            (0xe)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_n_a            (0xf)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_bf             0, 9, 6
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_msk            (0xf)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUESIZE_shf            (6)
#define   NFP_NBI_TM_QUEUE_CONFIG_REDENABLE                  (1 << 2)
#define     NFP_NBI_TM_QUEUE_CONFIG_REDENABLE_Disabled       (0)
#define     NFP_NBI_TM_QUEUE_CONFIG_REDENABLE_Enabled        (4)
#define     NFP_NBI_TM_QUEUE_CONFIG_REDENABLE_bf             0, 2, 2
#define     NFP_NBI_TM_QUEUE_CONFIG_REDENABLE_msk            (0x1)
#define     NFP_NBI_TM_QUEUE_CONFIG_REDENABLE_bit            (2)
#define   NFP_NBI_TM_QUEUE_CONFIG_DROPENABLE                 (1 << 1)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPENABLE_Disabled      (0)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPENABLE_Enabled       (2)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPENABLE_bf            0, 1, 1
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPENABLE_msk           (0x1)
#define     NFP_NBI_TM_QUEUE_CONFIG_DROPENABLE_bit           (1)
#define   NFP_NBI_TM_QUEUE_CONFIG_QUEUEENABLE                (1 << 0)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUEENABLE_Disable      (0)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUEENABLE_Enable       (1)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUEENABLE_bf           0, 0, 0
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUEENABLE_msk          (0x1)
#define     NFP_NBI_TM_QUEUE_CONFIG_QUEUEENABLE_bit          (0)


/*
 * Register: QueueDropCount
 *   [31:0]    DropCount
 *
 * Name(s):
 * <base>.QueueDropCount0...
 */
#define NFP_NBI_TM_QUEUE_DROP_COUNT(x)                     (0x2000 + ((x) * 0x4))
#define   NFP_NBI_TM_QUEUE_DROP_COUNT_DROPCOUNT(x)           (((x) & 0xffffffff) << 0)
#define   NFP_NBI_TM_QUEUE_DROP_COUNT_DROPCOUNT_of(x)        (((x) >> 0) & 0xffffffff)
#define     NFP_NBI_TM_QUEUE_DROP_COUNT_DROPCOUNT_bf         0, 31, 0
#define     NFP_NBI_TM_QUEUE_DROP_COUNT_DROPCOUNT_msk        (0xffffffff)
#define     NFP_NBI_TM_QUEUE_DROP_COUNT_DROPCOUNT_shf        (0)


/*
 * Register: QueueDropCountClear
 *   [31:0]    DropCountClear
 *
 * Name(s):
 * <base>.QueueDropCountClear0...
 */
#define NFP_NBI_TM_QUEUE_DROP_COUNT_CLEAR(x)               (0x3000 + ((x) * 0x4))
#define   NFP_NBI_TM_QUEUE_DROP_COUNT_CLEAR_DROPCOUNTCLEAR(x) (((x) & 0xffffffff) << 0)
#define   NFP_NBI_TM_QUEUE_DROP_COUNT_CLEAR_DROPCOUNTCLEAR_of(x) (((x) >> 0) & 0xffffffff)
#define     NFP_NBI_TM_QUEUE_DROP_COUNT_CLEAR_DROPCOUNTCLEAR_bf 0, 31, 0
#define     NFP_NBI_TM_QUEUE_DROP_COUNT_CLEAR_DROPCOUNTCLEAR_msk (0xffffffff)
#define     NFP_NBI_TM_QUEUE_DROP_COUNT_CLEAR_DROPCOUNTCLEAR_shf (0)


/*
 * Register: PacketDescriptorMemoryStatus
 *   [14]      PacketDescriptorMemoryFull
 *   [12:0]    PacketDescriptorMemoryLevel
 *
 * Name(s):
 * <base>.PacketDescriptorMemoryStatus
 */
#define NFP_NBI_TM_PACKET_DESCRIPTOR_MEMORY_STATUS         0x4000
#define   NFP_NBI_TM_PACKET_DESCRIPTOR_MEMORY_STATUS_PACKETDESCRIPTORMEMORYFULL (1 << 14)
#define     NFP_NBI_TM_PACKET_DESCRIPTOR_MEMORY_STATUS_PACKETDESCRIPTORMEMORYFULL_bf 0, 14, 14
#define     NFP_NBI_TM_PACKET_DESCRIPTOR_MEMORY_STATUS_PACKETDESCRIPTORMEMORYFULL_msk (0x1)
#define     NFP_NBI_TM_PACKET_DESCRIPTOR_MEMORY_STATUS_PACKETDESCRIPTORMEMORYFULL_bit (14)
#define   NFP_NBI_TM_PACKET_DESCRIPTOR_MEMORY_STATUS_PACKETDESCRIPTORMEMORYLEVEL(x) (((x) & 0x1fff) << 0)
#define   NFP_NBI_TM_PACKET_DESCRIPTOR_MEMORY_STATUS_PACKETDESCRIPTORMEMORYLEVEL_of(x) (((x) >> 0) & 0x1fff)
#define     NFP_NBI_TM_PACKET_DESCRIPTOR_MEMORY_STATUS_PACKETDESCRIPTORMEMORYLEVEL_bf 0, 12, 0
#define     NFP_NBI_TM_PACKET_DESCRIPTOR_MEMORY_STATUS_PACKETDESCRIPTORMEMORYLEVEL_msk (0x1fff)
#define     NFP_NBI_TM_PACKET_DESCRIPTOR_MEMORY_STATUS_PACKETDESCRIPTORMEMORYLEVEL_shf (0)


/*
 * Register: CommandDropStatus
 *   [31:28]   CommandDropCTMID
 *   [27:22]   CommandDropCTMIsland
 *   [21:12]   CommandDropQueueNumber
 *   [11:3]    CommandDropPacketNumber
 *   [1]       SecondTimeFullFIFO
 *   [0]       FirstTimeFullFIFO
 *
 * Name(s):
 * <base>.CommandDropStatus
 */
#define NFP_NBI_TM_COMMAND_DROP_STATUS                     0x4004
#define   NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPCTMID(x) (((x) & 0xf) << 28)
#define   NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPCTMID_of(x) (((x) >> 28) & 0xf)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPCTMID_bf 0, 31, 28
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPCTMID_msk (0xf)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPCTMID_shf (28)
#define   NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPCTMISLAND(x) (((x) & 0x3f) << 22)
#define   NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPCTMISLAND_of(x) (((x) >> 22) & 0x3f)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPCTMISLAND_bf 0, 27, 22
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPCTMISLAND_msk (0x3f)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPCTMISLAND_shf (22)
#define   NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPQUEUENUMBER(x) (((x) & 0x3ff) << 12)
#define   NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPQUEUENUMBER_of(x) (((x) >> 12) & 0x3ff)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPQUEUENUMBER_bf 0, 21, 12
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPQUEUENUMBER_msk (0x3ff)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPQUEUENUMBER_shf (12)
#define   NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPPACKETNUMBER(x) (((x) & 0x1ff) << 3)
#define   NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPPACKETNUMBER_of(x) (((x) >> 3) & 0x1ff)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPPACKETNUMBER_bf 0, 11, 3
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPPACKETNUMBER_msk (0x1ff)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_COMMANDDROPPACKETNUMBER_shf (3)
#define   NFP_NBI_TM_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO  (1 << 1)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO_No_Drop (0)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO_Drop (2)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO_bf 0, 1, 1
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO_msk (0x1)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO_bit (1)
#define   NFP_NBI_TM_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO   (1 << 0)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO_No_Drop (0)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO_Drop (1)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO_bf 0, 0, 0
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO_msk (0x1)
#define     NFP_NBI_TM_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO_bit (0)


/*
 * Register: PCIeCommandDropStatus
 *   [31:28]   CommandDropLookupAddress
 *   [27:22]   CommandDropCTMIsland
 *   [9:5]     CommandDropSequencerNumber
 *   [1]       SecondTimeFullFIFO
 *   [0]       FirstTimeFullFIFO
 *
 * Name(s):
 * <base>.PCIeCommandDropStatus
 */
#define NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS                0x4008
#define   NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPLOOKUPADDRESS(x) (((x) & 0xf) << 28)
#define   NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPLOOKUPADDRESS_of(x) (((x) >> 28) & 0xf)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPLOOKUPADDRESS_bf 0, 31, 28
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPLOOKUPADDRESS_msk (0xf)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPLOOKUPADDRESS_shf (28)
#define   NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPCTMISLAND(x) (((x) & 0x3f) << 22)
#define   NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPCTMISLAND_of(x) (((x) >> 22) & 0x3f)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPCTMISLAND_bf 0, 27, 22
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPCTMISLAND_msk (0x3f)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPCTMISLAND_shf (22)
#define   NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPSEQNCERNUMBER(x) (((x) & 0x1f) << 5)
#define   NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPSEQNCERNUMBER_of(x) (((x) >> 5) & 0x1f)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPSEQNCERNUMBER_bf 0, 9, 5
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPSEQNCERNUMBER_msk (0x1f)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_COMMANDDROPSEQNCERNUMBER_shf (5)
#define   NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO (1 << 1)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO_No_Drop (0)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO_Drop (2)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO_bf 0, 1, 1
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO_msk (0x1)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_SECONDTIMEFULLFIFO_bit (1)
#define   NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO (1 << 0)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO_No_Drop (0)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO_Drop (1)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO_bf 0, 0, 0
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO_msk (0x1)
#define     NFP_NBI_TM_PCIE_COMMAND_DROP_STATUS_FIRSTTIMEFULLFIFO_bit (0)


/*
 * NBI Traffic Manager Scheduler CSRs
 */

/*
 * Register: SchedulerConfig
 *   [2:1]     SPEnable
 *   [0]       DWRREnable
 *
 * Name(s):
 * <base>.SchedulerConfig0...
 */
#define NFP_NBI_TM_SCHEDULER_CONFIG(x)                     (0x0000 + ((x) * 0x4))
#define   NFP_NBI_TM_SCHEDULER_CONFIG_SPENABLE(x)            (((x) & 3) << 1)
#define   NFP_NBI_TM_SCHEDULER_CONFIG_SPENABLE_of(x)         (((x) >> 1) & 3)
#define     NFP_NBI_TM_SCHEDULER_CONFIG_SPENABLE_0           (0)
#define     NFP_NBI_TM_SCHEDULER_CONFIG_SPENABLE_1           (1)
#define     NFP_NBI_TM_SCHEDULER_CONFIG_SPENABLE_2           (2)
#define     NFP_NBI_TM_SCHEDULER_CONFIG_SPENABLE_3           (3)
#define     NFP_NBI_TM_SCHEDULER_CONFIG_SPENABLE_bf          0, 2, 1
#define     NFP_NBI_TM_SCHEDULER_CONFIG_SPENABLE_msk         (0x3)
#define     NFP_NBI_TM_SCHEDULER_CONFIG_SPENABLE_shf         (1)
#define   NFP_NBI_TM_SCHEDULER_CONFIG_DWRRENABLE             (1 << 0)
#define     NFP_NBI_TM_SCHEDULER_CONFIG_DWRRENABLE_Disable   (0)
#define     NFP_NBI_TM_SCHEDULER_CONFIG_DWRRENABLE_Enable    (1)
#define     NFP_NBI_TM_SCHEDULER_CONFIG_DWRRENABLE_bf        0, 0, 0
#define     NFP_NBI_TM_SCHEDULER_CONFIG_DWRRENABLE_msk       (0x1)
#define     NFP_NBI_TM_SCHEDULER_CONFIG_DWRRENABLE_bit       (0)


/*
 * Register: L1ExtSchedulerConfig
 *   [3]       L1ExtSchedEnable
 *   [2:1]     L1ExtSPEnable
 *   [0]       L1ExtDWRREnable
 *
 * Name(s):
 * <base>.L1ExtSchedulerConfig0...
 */
#define NFP_NBI_TM_L1EXTSCHEDULER_CONFIG(x)                (0x0400 + ((x) * 0x4))
#define   NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSCHEDENABLE  (1 << 3)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSCHEDENABLE_0 (0)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSCHEDENABLE_1 (8)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSCHEDENABLE_bf 0, 3, 3
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSCHEDENABLE_msk (0x1)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSCHEDENABLE_bit (3)
#define   NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSPENABLE(x)  (((x) & 3) << 1)
#define   NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSPENABLE_of(x) (((x) >> 1) & 3)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSPENABLE_0 (0)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSPENABLE_1 (1)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSPENABLE_2 (2)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSPENABLE_3 (3)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSPENABLE_bf 0, 2, 1
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSPENABLE_msk (0x3)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTSPENABLE_shf (1)
#define   NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTDWRRENABLE   (1 << 0)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTDWRRENABLE_Disable (0)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTDWRRENABLE_Enable (1)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTDWRRENABLE_bf 0, 0, 0
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTDWRRENABLE_msk (0x1)
#define     NFP_NBI_TM_L1EXTSCHEDULER_CONFIG_L1EXTDWRRENABLE_bit (0)


/*
 * Register: SchedulerWeight
 *   [23:0]    Weight
 *
 * Name(s):
 * <base>.SchedulerWeight0...
 */
#define NFP_NBI_TM_SCHEDULER_WEIGHT(x)                     (0x0800 + ((x) * 0x4))
#define   NFP_NBI_TM_SCHEDULER_WEIGHT_WEIGHT(x)              (((x) & 0xffffff) << 0)
#define   NFP_NBI_TM_SCHEDULER_WEIGHT_WEIGHT_of(x)           (((x) >> 0) & 0xffffff)
#define     NFP_NBI_TM_SCHEDULER_WEIGHT_WEIGHT_bf            0, 23, 0
#define     NFP_NBI_TM_SCHEDULER_WEIGHT_WEIGHT_msk           (0xffffff)
#define     NFP_NBI_TM_SCHEDULER_WEIGHT_WEIGHT_shf           (0)


/*
 * Register: SchedulerDeficit
 *   [24:0]    Deficit
 *
 * Name(s):
 * <base>.SchedulerDeficit0...
 */
#define NFP_NBI_TM_SCHEDULER_DEFICIT(x)                    (0x1000 + ((x) * 0x4))
#define   NFP_NBI_TM_SCHEDULER_DEFICIT_DEFICIT(x)            (((x) & 0x1ffffff) << 0)
#define   NFP_NBI_TM_SCHEDULER_DEFICIT_DEFICIT_of(x)         (((x) >> 0) & 0x1ffffff)
#define     NFP_NBI_TM_SCHEDULER_DEFICIT_DEFICIT_bf          0, 24, 0
#define     NFP_NBI_TM_SCHEDULER_DEFICIT_DEFICIT_msk         (0x1ffffff)
#define     NFP_NBI_TM_SCHEDULER_DEFICIT_DEFICIT_shf         (0)



/*
 * Register: SchedulerWeight
 *   [23:0]    Weight
 *
 * Name(s):
 * <base>.SchedulerWeight0...
 */
#define NFP_NBI_TM_L1_SCHEDULER_WEIGHT(x)                  (0x0000 + ((x) * 0x4))
#define   NFP_NBI_TM_L1_SCHEDULER_WEIGHT_WEIGHT(x)           (((x) & 0xffffff) << 0)
#define   NFP_NBI_TM_L1_SCHEDULER_WEIGHT_WEIGHT_of(x)        (((x) >> 0) & 0xffffff)
#define     NFP_NBI_TM_L1_SCHEDULER_WEIGHT_WEIGHT_bf         0, 23, 0
#define     NFP_NBI_TM_L1_SCHEDULER_WEIGHT_WEIGHT_msk        (0xffffff)
#define     NFP_NBI_TM_L1_SCHEDULER_WEIGHT_WEIGHT_shf        (0)



/*
 * Register: SchedulerDeficit
 *   [24:0]    Deficit
 *
 * Name(s):
 * <base>.SchedulerDeficit0...
 */
#define NFP_NBI_TM_L1_SCHEDULER_DEFICIT(x)                 (0x0000 + ((x) * 0x4))
#define   NFP_NBI_TM_L1_SCHEDULER_DEFICIT_DEFICIT(x)         (((x) & 0x1ffffff) << 0)
#define   NFP_NBI_TM_L1_SCHEDULER_DEFICIT_DEFICIT_of(x)      (((x) >> 0) & 0x1ffffff)
#define     NFP_NBI_TM_L1_SCHEDULER_DEFICIT_DEFICIT_bf       0, 24, 0
#define     NFP_NBI_TM_L1_SCHEDULER_DEFICIT_DEFICIT_msk      (0x1ffffff)
#define     NFP_NBI_TM_L1_SCHEDULER_DEFICIT_DEFICIT_shf      (0)



/*
 * Register: SchedulerWeight
 *   [23:0]    Weight
 *
 * Name(s):
 * <base>.SchedulerWeight0...
 */
#define NFP_NBI_TM_L2_SCHEDULER_WEIGHT(x)                  (0x0000 + ((x) * 0x4))
#define   NFP_NBI_TM_L2_SCHEDULER_WEIGHT_WEIGHT(x)           (((x) & 0xffffff) << 0)
#define   NFP_NBI_TM_L2_SCHEDULER_WEIGHT_WEIGHT_of(x)        (((x) >> 0) & 0xffffff)
#define     NFP_NBI_TM_L2_SCHEDULER_WEIGHT_WEIGHT_bf         0, 23, 0
#define     NFP_NBI_TM_L2_SCHEDULER_WEIGHT_WEIGHT_msk        (0xffffff)
#define     NFP_NBI_TM_L2_SCHEDULER_WEIGHT_WEIGHT_shf        (0)



/*
 * Register: SchedulerDeficit
 *   [24:0]    Deficit
 *
 * Name(s):
 * <base>.SchedulerDeficit0...
 */
#define NFP_NBI_TM_L2_SCHEDULER_DEFICIT(x)                 (0x0000 + ((x) * 0x4))
#define   NFP_NBI_TM_L2_SCHEDULER_DEFICIT_DEFICIT(x)         (((x) & 0x1ffffff) << 0)
#define   NFP_NBI_TM_L2_SCHEDULER_DEFICIT_DEFICIT_of(x)      (((x) >> 0) & 0x1ffffff)
#define     NFP_NBI_TM_L2_SCHEDULER_DEFICIT_DEFICIT_bf       0, 24, 0
#define     NFP_NBI_TM_L2_SCHEDULER_DEFICIT_DEFICIT_msk      (0x1ffffff)
#define     NFP_NBI_TM_L2_SCHEDULER_DEFICIT_DEFICIT_shf      (0)


/*
 * NBI Traffic Manager Shaper CSRs
 */

/*
 * Register: ShaperRate
 *   [13:0]    Rate
 *
 * Name(s):
 * <base>.ShaperRate0... <base>.L1ExtShaperRate0...
 */
#define NFP_NBI_TM_SHAPER_RATE(x)                          (0x0000 + ((x) * 0x4))
#define NFP_NBI_TM_L1EXT_SHAPER_RATE(x)                    (0x0300 + ((x) * 0x4))
#define   NFP_NBI_TM_SHAPER_RATE_RATE(x)                     (((x) & 0x3fff) << 0)
#define   NFP_NBI_TM_SHAPER_RATE_RATE_of(x)                  (((x) >> 0) & 0x3fff)
#define     NFP_NBI_TM_SHAPER_RATE_RATE_bf                   0, 13, 0
#define     NFP_NBI_TM_SHAPER_RATE_RATE_msk                  (0x3fff)
#define     NFP_NBI_TM_SHAPER_RATE_RATE_shf                  (0)


/*
 * Register: ShaperThreshold
 *   [2:0]     Threshold
 *
 * Name(s):
 * <base>.ShaperThreshold0... <base>.L1ExtShaperThreshold0...
 */
#define NFP_NBI_TM_SHAPER_THRESHOLD(x)                     (0x0800 + ((x) * 0x4))
#define NFP_NBI_TM_L1EXT_SHAPER_THRESHOLD(x)               (0x0b00 + ((x) * 0x4))
#define   NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD(x)           (((x) & 7) << 0)
#define   NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_of(x)        (((x) >> 0) & 7)
#define     NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_8192       (0)
#define     NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_16384      (1)
#define     NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_24576      (2)
#define     NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_32768      (3)
#define     NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_40960      (4)
#define     NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_49152      (5)
#define     NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_57344      (6)
#define     NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_65535      (7)
#define     NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_bf         0, 2, 0
#define     NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_msk        (0x7)
#define     NFP_NBI_TM_SHAPER_THRESHOLD_THRESHOLD_shf        (0)


/*
 * Register: ShaperMaxOvershoot
 *   [2:0]     MaxOvershoot
 *
 * Name(s):
 * <base>.ShaperMaxOvershoot0... <base>.L1ExtShaperMaxOvershoot0...
 */
#define NFP_NBI_TM_SHAPER_MAX_OVERSHOOT(x)                 (0x1000 + ((x) * 0x4))
#define NFP_NBI_TM_L1EXT_SHAPER_MAX_OVERSHOOT(x)           (0x1300 + ((x) * 0x4))
#define   NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT(x)    (((x) & 7) << 0)
#define   NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_of(x) (((x) >> 0) & 7)
#define     NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_16384 (0)
#define     NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_24576 (1)
#define     NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_32768 (2)
#define     NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_40960 (3)
#define     NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_49152 (4)
#define     NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_57344 (5)
#define     NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_65536 (6)
#define     NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_131071 (7)
#define     NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_bf  0, 2, 0
#define     NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_msk (0x7)
#define     NFP_NBI_TM_SHAPER_MAX_OVERSHOOT_MAXOVERSHOOT_shf (0)


/*
 * Register: ShaperRateAdjust
 *   [9:0]     RateAdjust
 *
 * Name(s):
 * <base>.ShaperRateAdjust0... <base>.L1ExtShaperRateAdjust0...
 */
#define NFP_NBI_TM_SHAPER_RATE_ADJUST(x)                   (0x1800 + ((x) * 0x4))
#define NFP_NBI_TM_L1EXT_SHAPER_RATE_ADJUST(x)             (0x1b00 + ((x) * 0x4))
#define   NFP_NBI_TM_SHAPER_RATE_ADJUST_RATE(x)              (((x) & 0x3ff) << 0)
#define   NFP_NBI_TM_SHAPER_RATE_ADJUST_RATE_of(x)           (((x) >> 0) & 0x3ff)
#define     NFP_NBI_TM_SHAPER_RATE_ADJUST_RATE_bf            0, 9, 0
#define     NFP_NBI_TM_SHAPER_RATE_ADJUST_RATE_msk           (0x3ff)
#define     NFP_NBI_TM_SHAPER_RATE_ADJUST_RATE_shf           (0)


/*
 * Register: ShaperStatus
 *   [17]      ShaperOpen
 *   [16:0]    Level
 *
 * Name(s):
 * <base>.ShaperStatus0... <base>.L1ExtShaperStatus0...
 */
#define NFP_NBI_TM_SHAPER_STATUS(x)                        (0x2000 + ((x) * 0x4))
#define NFP_NBI_TM_L1EXT_SHAPER_STATUS(x)                  (0x2300 + ((x) * 0x4))
#define   NFP_NBI_TM_SHAPER_STATUS_SHAPEROPEN                (1 << 17)
#define     NFP_NBI_TM_SHAPER_STATUS_SHAPEROPEN_Closed       (0)
#define     NFP_NBI_TM_SHAPER_STATUS_SHAPEROPEN_Open         (0x20000)
#define     NFP_NBI_TM_SHAPER_STATUS_SHAPEROPEN_bf           0, 17, 17
#define     NFP_NBI_TM_SHAPER_STATUS_SHAPEROPEN_msk          (0x1)
#define     NFP_NBI_TM_SHAPER_STATUS_SHAPEROPEN_bit          (17)
#define   NFP_NBI_TM_SHAPER_STATUS_LEVEL(x)                  (((x) & 0x1ffff) << 0)
#define   NFP_NBI_TM_SHAPER_STATUS_LEVEL_of(x)               (((x) >> 0) & 0x1ffff)
#define     NFP_NBI_TM_SHAPER_STATUS_LEVEL_bf                0, 16, 0
#define     NFP_NBI_TM_SHAPER_STATUS_LEVEL_msk               (0x1ffff)
#define     NFP_NBI_TM_SHAPER_STATUS_LEVEL_shf               (0)


#if defined(__NFP_LANG_MICROC)

/*
 * NBI Traffic Manager register structures
 */
struct nfp_nbi_tm_traffic_manager_config {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int dwrrignoremacxofffc:1;
            unsigned int decode_pm_disable:1;
            unsigned int shaper_reduce_three_fourth_enable:1;
            unsigned int shaper_reduce_rate_enable:1;
            unsigned int free_pkt_vs_address_bit_set:1;
            unsigned int usetwopullidbuses:2;
            unsigned int flowcontroleventena:1;
            unsigned int pktreadyc0enable:1;
            unsigned int tmfreeptrnoreturn:1;
            unsigned int dwrrignoreminipktfc:1;
            unsigned int startlinkedlistinit:1;
            unsigned int __reserved_18:2;
            unsigned int packetdescriptorlinkedlistena:1;
            unsigned int oobfcenable:1;
            unsigned int l0channelmap:3;
            unsigned int levelcheckenable:1;
            unsigned int descqueuesenable:1;
            unsigned int __reserved_10:1;
            unsigned int err_poison_ena:1;
            unsigned int schedulerenable:1;
            unsigned int shaperenable:1;
            unsigned int minipacketfcenable:1;
            unsigned int channellevelselect:1;
            unsigned int __reserved_4:1;
            unsigned int numsequencers:3;
            unsigned int l1inputselect:1;
#           else
            unsigned int l1inputselect:1;
            unsigned int numsequencers:3;
            unsigned int __reserved_4:1;
            unsigned int channellevelselect:1;
            unsigned int minipacketfcenable:1;
            unsigned int shaperenable:1;
            unsigned int schedulerenable:1;
            unsigned int err_poison_ena:1;
            unsigned int __reserved_10:1;
            unsigned int descqueuesenable:1;
            unsigned int levelcheckenable:1;
            unsigned int l0channelmap:3;
            unsigned int oobfcenable:1;
            unsigned int packetdescriptorlinkedlistena:1;
            unsigned int __reserved_18:2;
            unsigned int startlinkedlistinit:1;
            unsigned int dwrrignoreminipktfc:1;
            unsigned int tmfreeptrnoreturn:1;
            unsigned int pktreadyc0enable:1;
            unsigned int flowcontroleventena:1;
            unsigned int usetwopullidbuses:2;
            unsigned int free_pkt_vs_address_bit_set:1;
            unsigned int shaper_reduce_rate_enable:1;
            unsigned int shaper_reduce_three_fourth_enable:1;
            unsigned int decode_pm_disable:1;
            unsigned int dwrrignoremacxofffc:1;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_drop_rate {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_24:8;
            unsigned int dropraterangeb3:3;
            unsigned int dropraterangeb2:3;
            unsigned int dropraterangeb1:3;
            unsigned int dropraterangeb0:3;
            unsigned int dropraterangea3:3;
            unsigned int dropraterangea2:3;
            unsigned int dropraterangea1:3;
            unsigned int dropraterangea0:3;
#           else
            unsigned int dropraterangea0:3;
            unsigned int dropraterangea1:3;
            unsigned int dropraterangea2:3;
            unsigned int dropraterangea3:3;
            unsigned int dropraterangeb0:3;
            unsigned int dropraterangeb1:3;
            unsigned int dropraterangeb2:3;
            unsigned int dropraterangeb3:3;
            unsigned int __reserved_24:8;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_blq_event {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_24:8;
            unsigned int reduced_blq_threshold:1;
            unsigned int bypass_blq_ptr_return:1;
            unsigned int clr_running_evt_cnt:1;
            unsigned int dis_blq_event_fifo_full_assert:1;
            unsigned int blqevent_threshold3:2;
            unsigned int blqevent_threshold2:2;
            unsigned int blqevent_threshold1:2;
            unsigned int blqevent_threshold0:2;
            unsigned int __reserved_8:4;
            unsigned int blq_event_not_empty_enable:4;
            unsigned int blq_event_status_enable:4;
#           else
            unsigned int blq_event_status_enable:4;
            unsigned int blq_event_not_empty_enable:4;
            unsigned int __reserved_8:4;
            unsigned int blqevent_threshold0:2;
            unsigned int blqevent_threshold1:2;
            unsigned int blqevent_threshold2:2;
            unsigned int blqevent_threshold3:2;
            unsigned int dis_blq_event_fifo_full_assert:1;
            unsigned int clr_running_evt_cnt:1;
            unsigned int bypass_blq_ptr_return:1;
            unsigned int reduced_blq_threshold:1;
            unsigned int __reserved_24:8;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_egress_rate_limit {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_4:28;
            unsigned int egress_rate_limit_off:1;
            unsigned int egress_rate:3;
#           else
            unsigned int egress_rate:3;
            unsigned int egress_rate_limit_off:1;
            unsigned int __reserved_4:28;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_egress_pull_id_port_enable {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_2:30;
            unsigned int egress_pull_id_port_enable:2;
#           else
            unsigned int egress_pull_id_port_enable:2;
            unsigned int __reserved_2:30;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_out_of_order_count {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_16:16;
            unsigned int outofordercount:16;
#           else
            unsigned int outofordercount:16;
            unsigned int __reserved_16:16;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_out_of_order_count_clear {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_16:16;
            unsigned int outofordercountclear:16;
#           else
            unsigned int outofordercountclear:16;
            unsigned int __reserved_16:16;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_minipkt_credit_config {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_26:6;
            unsigned int perchannelcreditenable:1;
            unsigned int minipacketfcmode:1;
            unsigned int __reserved_22:2;
            unsigned int fpcreditlimit:10;
            unsigned int __reserved_10:2;
            unsigned int creditlimit:10;
#           else
            unsigned int creditlimit:10;
            unsigned int __reserved_10:2;
            unsigned int fpcreditlimit:10;
            unsigned int __reserved_22:2;
            unsigned int minipacketfcmode:1;
            unsigned int perchannelcreditenable:1;
            unsigned int __reserved_26:6;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_minipkt_free_pool_credit {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_10:22;
            unsigned int fpcreditcount:10;
#           else
            unsigned int fpcreditcount:10;
            unsigned int __reserved_10:22;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_minipkt_channel_credit {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_10:22;
            unsigned int creditcount:10;
#           else
            unsigned int creditcount:10;
            unsigned int __reserved_10:22;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_reorder_activity {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_16:16;
            unsigned int reorderactivity:16;
#           else
            unsigned int reorderactivity:16;
            unsigned int __reserved_16:16;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_drop_profile {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_12:20;
            unsigned int dropraterange3:3;
            unsigned int dropraterange2:3;
            unsigned int dropraterange1:3;
            unsigned int dropraterange0:3;
#           else
            unsigned int dropraterange0:3;
            unsigned int dropraterange1:3;
            unsigned int dropraterange2:3;
            unsigned int dropraterange3:3;
            unsigned int __reserved_12:20;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_descriptor_memory_red_drop {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_12:20;
            unsigned int dropraterange3:3;
            unsigned int dropraterange2:3;
            unsigned int dropraterange1:3;
            unsigned int dropraterange0:3;
#           else
            unsigned int dropraterange0:3;
            unsigned int dropraterange1:3;
            unsigned int dropraterange2:3;
            unsigned int dropraterange3:3;
            unsigned int __reserved_12:20;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_minipkt_channel_credit_limit {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_10:22;
            unsigned int channelcreditlimit:10;
#           else
            unsigned int channelcreditlimit:10;
            unsigned int __reserved_10:22;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmreorderbufferflush {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_16:16;
            unsigned int sequencerflush:16;
#           else
            unsigned int sequencerflush:16;
            unsigned int __reserved_16:16;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmreordertimeoutrange0 {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int seqrange15:2;
            unsigned int seqrange14:2;
            unsigned int seqrange13:2;
            unsigned int seqrange12:2;
            unsigned int seqrange11:2;
            unsigned int seqrange10:2;
            unsigned int seqrange9:2;
            unsigned int seqrange8:2;
            unsigned int seqrange7:2;
            unsigned int seqrange6:2;
            unsigned int seqrange5:2;
            unsigned int seqrange4:2;
            unsigned int seqrange3:2;
            unsigned int seqrange2:2;
            unsigned int seqrange1:2;
            unsigned int seqrange0:2;
#           else
            unsigned int seqrange0:2;
            unsigned int seqrange1:2;
            unsigned int seqrange2:2;
            unsigned int seqrange3:2;
            unsigned int seqrange4:2;
            unsigned int seqrange5:2;
            unsigned int seqrange6:2;
            unsigned int seqrange7:2;
            unsigned int seqrange8:2;
            unsigned int seqrange9:2;
            unsigned int seqrange10:2;
            unsigned int seqrange11:2;
            unsigned int seqrange12:2;
            unsigned int seqrange13:2;
            unsigned int seqrange14:2;
            unsigned int seqrange15:2;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmreordertimeoutvalue0 {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int seqvalue3:8;
            unsigned int seqvalue2:8;
            unsigned int seqvalue1:8;
            unsigned int seqvalue0:8;
#           else
            unsigned int seqvalue0:8;
            unsigned int seqvalue1:8;
            unsigned int seqvalue2:8;
            unsigned int seqvalue3:8;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmreordertimeoutvalue1 {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int seqvalue7:8;
            unsigned int seqvalue6:8;
            unsigned int seqvalue5:8;
            unsigned int seqvalue4:8;
#           else
            unsigned int seqvalue4:8;
            unsigned int seqvalue5:8;
            unsigned int seqvalue6:8;
            unsigned int seqvalue7:8;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmreordertimeoutvalue2 {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int seqvalue11:8;
            unsigned int seqvalue10:8;
            unsigned int seqvalue9:8;
            unsigned int seqvalue8:8;
#           else
            unsigned int seqvalue8:8;
            unsigned int seqvalue9:8;
            unsigned int seqvalue10:8;
            unsigned int seqvalue11:8;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmreordertimeoutvalue3 {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int seqvalue15:8;
            unsigned int seqvalue14:8;
            unsigned int seqvalue13:8;
            unsigned int seqvalue12:8;
#           else
            unsigned int seqvalue12:8;
            unsigned int seqvalue13:8;
            unsigned int seqvalue14:8;
            unsigned int seqvalue15:8;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmreorderflushflag {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_16:16;
            unsigned int tmreorderflushflag:16;
#           else
            unsigned int tmreorderflushflag:16;
            unsigned int __reserved_16:16;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmreceivedpacketcounter {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int tmreceivedpacketcounter:32;
#           else
            unsigned int tmreceivedpacketcounter:32;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmtransmittedpacketcounter {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int tmtransmittedpacketcounter:32;
#           else
            unsigned int tmtransmittedpacketcounter:32;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmblqnullmuptr {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_29:3;
            unsigned int tmblqnullmuptr:29;
#           else
            unsigned int tmblqnullmuptr:29;
            unsigned int __reserved_29:3;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmreorderseqrempty {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_16:16;
            unsigned int tmreorderseqrempty:16;
#           else
            unsigned int tmreorderseqrempty:16;
            unsigned int __reserved_16:16;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmreceiveddroppacketcounter {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int tmreceiveddroppacketcounter:32;
#           else
            unsigned int tmreceiveddroppacketcounter:32;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_nbitmpciecmdoutcfg {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_30:2;
            unsigned int ring_number:10;
            unsigned int output_port:1;
            unsigned int island:8;
            unsigned int token:2;
            unsigned int action:5;
            unsigned int target:4;
#           else
            unsigned int target:4;
            unsigned int action:5;
            unsigned int token:2;
            unsigned int island:8;
            unsigned int output_port:1;
            unsigned int ring_number:10;
            unsigned int __reserved_30:2;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_freepktoutstandinglimit {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int limit:2;
#           else
            unsigned int limit:2;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmchannelpcievmqosena_0 {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int tmchannelpcievmqosena_0:32;
#           else
            unsigned int tmchannelpcievmqosena_0:32;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmchannelpcievmqosena_1 {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int tmchannelpcievmqosena_1:32;
#           else
            unsigned int tmchannelpcievmqosena_1:32;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmchannelpcievmqosena_2 {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int tmchannelpcievmqosena_2:32;
#           else
            unsigned int tmchannelpcievmqosena_2:32;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_tmchannelpcievmqosena_3 {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int tmchannelpcievmqosena_3:32;
#           else
            unsigned int tmchannelpcievmqosena_3:32;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_reorderbuffer_perf_seqr_selector {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_4:28;
            unsigned int reorderbuffer_perf_seqr_selector:4;
#           else
            unsigned int reorderbuffer_perf_seqr_selector:4;
            unsigned int __reserved_4:28;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_reorder_buffer_head_pointer_update {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int reorder_buffer_head_pointer_update:32;
#           else
            unsigned int reorder_buffer_head_pointer_update:32;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_shaper_rate_selector {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_9:23;
            unsigned int l2_shaper_rate_selector:3;
            unsigned int l1_shaper_rate_selector:3;
            unsigned int l0_shaper_rate_selector:3;
#           else
            unsigned int l0_shaper_rate_selector:3;
            unsigned int l1_shaper_rate_selector:3;
            unsigned int l2_shaper_rate_selector:3;
            unsigned int __reserved_9:23;
#           endif
        };
        unsigned int __raw;
    };
};


/*
 * NBI Traffic Manager Queue register structures
 */
struct nfp_nbi_tm_queue_status {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_14:18;
            unsigned int queuefull:1;
            unsigned int queuelevel:13;
#           else
            unsigned int queuelevel:13;
            unsigned int queuefull:1;
            unsigned int __reserved_14:18;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_queue_config {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_12:20;
            unsigned int dropprecedenceenable:1;
            unsigned int dropraterangeselect:1;
            unsigned int queuesize:4;
            unsigned int __reserved_3:3;
            unsigned int redenable:1;
            unsigned int dropenable:1;
            unsigned int queueenable:1;
#           else
            unsigned int queueenable:1;
            unsigned int dropenable:1;
            unsigned int redenable:1;
            unsigned int __reserved_3:3;
            unsigned int queuesize:4;
            unsigned int dropraterangeselect:1;
            unsigned int dropprecedenceenable:1;
            unsigned int __reserved_12:20;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_queue_drop_count {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int dropcount:32;
#           else
            unsigned int dropcount:32;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_queue_drop_count_clear {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int dropcountclear:32;
#           else
            unsigned int dropcountclear:32;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_packet_descriptor_memory_status {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_15:17;
            unsigned int packetdescriptormemoryfull:1;
            unsigned int __reserved_13:1;
            unsigned int packetdescriptormemorylevel:13;
#           else
            unsigned int packetdescriptormemorylevel:13;
            unsigned int __reserved_13:1;
            unsigned int packetdescriptormemoryfull:1;
            unsigned int __reserved_15:17;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_command_drop_status {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int commanddropctmid:4;
            unsigned int commanddropctmisland:6;
            unsigned int commanddropqueuenumber:10;
            unsigned int commanddroppacketnumber:9;
            unsigned int __reserved_2:1;
            unsigned int secondtimefullfifo:1;
            unsigned int firsttimefullfifo:1;
#           else
            unsigned int firsttimefullfifo:1;
            unsigned int secondtimefullfifo:1;
            unsigned int __reserved_2:1;
            unsigned int commanddroppacketnumber:9;
            unsigned int commanddropqueuenumber:10;
            unsigned int commanddropctmisland:6;
            unsigned int commanddropctmid:4;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_pcie_command_drop_status {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int commanddroplookupaddress:4;
            unsigned int commanddropctmisland:6;
            unsigned int __reserved_10:12;
            unsigned int commanddropseqncernumber:5;
            unsigned int __reserved_2:3;
            unsigned int secondtimefullfifo:1;
            unsigned int firsttimefullfifo:1;
#           else
            unsigned int firsttimefullfifo:1;
            unsigned int secondtimefullfifo:1;
            unsigned int __reserved_2:3;
            unsigned int commanddropseqncernumber:5;
            unsigned int __reserved_10:12;
            unsigned int commanddropctmisland:6;
            unsigned int commanddroplookupaddress:4;
#           endif
        };
        unsigned int __raw;
    };
};


/*
 * NBI Traffic Manager Scheduler register structures
 */
struct nfp_nbi_tm_scheduler_config {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_3:29;
            unsigned int spenable:2;
            unsigned int dwrrenable:1;
#           else
            unsigned int dwrrenable:1;
            unsigned int spenable:2;
            unsigned int __reserved_3:29;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_l1extscheduler_config {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_4:28;
            unsigned int l1extschedenable:1;
            unsigned int l1extspenable:2;
            unsigned int l1extdwrrenable:1;
#           else
            unsigned int l1extdwrrenable:1;
            unsigned int l1extspenable:2;
            unsigned int l1extschedenable:1;
            unsigned int __reserved_4:28;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_scheduler_weight {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_24:8;
            unsigned int weight:24;
#           else
            unsigned int weight:24;
            unsigned int __reserved_24:8;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_scheduler_deficit {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_25:7;
            unsigned int deficit:25;
#           else
            unsigned int deficit:25;
            unsigned int __reserved_25:7;
#           endif
        };
        unsigned int __raw;
    };
};


struct nfp_nbi_tm_l1_scheduler_weight {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_24:8;
            unsigned int weight:24;
#           else
            unsigned int weight:24;
            unsigned int __reserved_24:8;
#           endif
        };
        unsigned int __raw;
    };
};


struct nfp_nbi_tm_l1_scheduler_deficit {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_25:7;
            unsigned int deficit:25;
#           else
            unsigned int deficit:25;
            unsigned int __reserved_25:7;
#           endif
        };
        unsigned int __raw;
    };
};


struct nfp_nbi_tm_l2_scheduler_weight {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_24:8;
            unsigned int weight:24;
#           else
            unsigned int weight:24;
            unsigned int __reserved_24:8;
#           endif
        };
        unsigned int __raw;
    };
};


struct nfp_nbi_tm_l2_scheduler_deficit {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_25:7;
            unsigned int deficit:25;
#           else
            unsigned int deficit:25;
            unsigned int __reserved_25:7;
#           endif
        };
        unsigned int __raw;
    };
};


/*
 * NBI Traffic Manager Shaper register structures
 */
struct nfp_nbi_tm_shaper_rate {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_14:18;
            unsigned int rate:14;
#           else
            unsigned int rate:14;
            unsigned int __reserved_14:18;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_shaper_threshold {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_3:29;
            unsigned int threshold:3;
#           else
            unsigned int threshold:3;
            unsigned int __reserved_3:29;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_shaper_max_overshoot {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_3:29;
            unsigned int maxovershoot:3;
#           else
            unsigned int maxovershoot:3;
            unsigned int __reserved_3:29;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_shaper_rate_adjust {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_10:22;
            unsigned int rate:10;
#           else
            unsigned int rate:10;
            unsigned int __reserved_10:22;
#           endif
        };
        unsigned int __raw;
    };
};

struct nfp_nbi_tm_shaper_status {
    union {
        struct {
#           ifdef BIGENDIAN
            unsigned int __reserved_18:14;
            unsigned int shaperopen:1;
            unsigned int level:17;
#           else
            unsigned int level:17;
            unsigned int shaperopen:1;
            unsigned int __reserved_18:14;
#           endif
        };
        unsigned int __raw;
    };
};


#endif /* __NFP_LANG_MICROC */

#endif /* !_NFP3800__NFP_NBI_TM_H_ */
